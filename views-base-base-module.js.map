{"version":3,"sources":["webpack:///./node_modules/ngx-bootstrap/carousel/carousel.component.js","webpack:///./node_modules/ngx-bootstrap/carousel/carousel.config.js","webpack:///./node_modules/ngx-bootstrap/carousel/carousel.module.js","webpack:///./node_modules/ngx-bootstrap/carousel/index.js","webpack:///./node_modules/ngx-bootstrap/carousel/slide.component.js","webpack:///./node_modules/ngx-bootstrap/collapse/collapse.directive.js","webpack:///./node_modules/ngx-bootstrap/collapse/collapse.module.js","webpack:///./node_modules/ngx-bootstrap/collapse/index.js","webpack:///./node_modules/ngx-bootstrap/pagination/index.js","webpack:///./node_modules/ngx-bootstrap/pagination/pager.component.js","webpack:///./node_modules/ngx-bootstrap/pagination/pagination.component.js","webpack:///./node_modules/ngx-bootstrap/pagination/pagination.config.js","webpack:///./node_modules/ngx-bootstrap/pagination/pagination.module.js","webpack:///./node_modules/ngx-bootstrap/popover/index.js","webpack:///./node_modules/ngx-bootstrap/popover/popover-container.component.js","webpack:///./node_modules/ngx-bootstrap/popover/popover.config.js","webpack:///./node_modules/ngx-bootstrap/popover/popover.directive.js","webpack:///./node_modules/ngx-bootstrap/popover/popover.module.js","webpack:///./node_modules/ngx-bootstrap/progressbar/bar.component.js","webpack:///./node_modules/ngx-bootstrap/progressbar/index.js","webpack:///./node_modules/ngx-bootstrap/progressbar/progressbar.component.js","webpack:///./node_modules/ngx-bootstrap/progressbar/progressbar.config.js","webpack:///./node_modules/ngx-bootstrap/progressbar/progressbar.module.js","webpack:///./node_modules/ngx-bootstrap/tooltip/index.js","webpack:///./node_modules/ngx-bootstrap/tooltip/tooltip-container.component.js","webpack:///./node_modules/ngx-bootstrap/tooltip/tooltip.config.js","webpack:///./node_modules/ngx-bootstrap/tooltip/tooltip.directive.js","webpack:///./node_modules/ngx-bootstrap/tooltip/tooltip.module.js","webpack:///./node_modules/ngx-bootstrap/utils/index.js","webpack:///./node_modules/ngx-bootstrap/utils/linked-list.class.js","webpack:///./node_modules/ngx-bootstrap/utils/warn-once.js","webpack:///./src/app/views/base/base-routing.module.ts","webpack:///./src/app/views/base/base.module.ts","webpack:///./src/app/views/base/cards.component.html","webpack:///./src/app/views/base/cards.component.ts","webpack:///./src/app/views/base/carousels.component.html","webpack:///./src/app/views/base/carousels.component.ts","webpack:///./src/app/views/base/collapses.component.html","webpack:///./src/app/views/base/collapses.component.ts","webpack:///./src/app/views/base/forms.component.html","webpack:///./src/app/views/base/forms.component.ts","webpack:///./src/app/views/base/paginations.component.html","webpack:///./src/app/views/base/paginations.component.ts","webpack:///./src/app/views/base/popovers.component.html","webpack:///./src/app/views/base/popovers.component.ts","webpack:///./src/app/views/base/progress.component.html","webpack:///./src/app/views/base/progress.component.ts","webpack:///./src/app/views/base/switches.component.html","webpack:///./src/app/views/base/switches.component.ts","webpack:///./src/app/views/base/tables.component.html","webpack:///./src/app/views/base/tables.component.ts","webpack:///./src/app/views/base/tabs.component.html","webpack:///./src/app/views/base/tabs.component.ts","webpack:///./src/app/views/base/tooltips.component.html","webpack:///./src/app/views/base/tooltips.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AAC7B;AACH;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,wDAAwD,qBAAqB,EAAE;AAC/E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uPAAuP,eAAe;AACtQ,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,yEAAwB;AACjC,SAAS,8DAAgB;AACzB,MAAM;AACN;AACA,oBAAoB,4DAAc;AAClC,qBAAqB,4DAAc;AACnC,4BAA4B,4DAAc;AAC1C,+BAA+B,6DAAe;AAC9C,yBAAyB,4DAAc;AACvC,sBAAsB,4DAAc;AACpC;AACA;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;;;AClaqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;;AClBuB;AACJ;AACS;AACH;AACA;AACzB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;;;;;;;;ACtB4B;AACH;AACA;AACA;AACzB,iC;;;;;;;;;;;;;;;;ACJwC;AACZ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,+EAA2B;AACpC,MAAM;AACN;AACA,oBAAoB,2FAA6C,GAAG,4DAAc;AAClF,sBAAsB,yFAA2C,GAAG,kGAAoD;AACxH;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;ACxCqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,kEAAoB;AAC7B,SAAS,iEAAmB;AAC5B,MAAM;AACN;AACA,uBAAuB,6DAAe;AACtC,sBAAsB,6DAAe;AACrC,qBAAqB,4FAA8C;AACnE,wBAAwB,uFAAyC,GAAG,yFAA2C,GAAG,iGAAmD;AACrK,yBAAyB,+FAAiD;AAC1E,wBAAwB,6FAA+C;AACvE,0BAA0B,+FAAiD;AAC3E,sBAAsB,4DAAc;AACpC;AACA;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;;;;ACjGmB;AACS;AAC5B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;;ACjB4B;AACH;AACzB,iC;;;;;;;;;;;;;;;;;;;;;;;;;ACFyB;AACK;AACH;AACA;AAC3B,iC;;;;;;;;;;;;;;;;;;ACJuG;AAC3E;AACD;AAC3B;AACA;AACA;AACA,+FAAyC,uBAAuB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kIAAkI,0CAA0C,aAAa,gBAAgB,uDAAuD,uBAAuB,iFAAiF,0CAA0C,aAAa,gBAAgB,uDAAuD,mBAAmB;AACzf;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,iEAAmB;AAC5B,SAAS,kEAAoB;AAC7B,SAAS,6EAA0B;AACnC,SAAS,yEAA2B;AACpC,MAAM;AACN;AACA,mBAAmB,4DAAc;AACjC,qBAAqB,4DAAc;AACnC,2BAA2B,4DAAc;AACzC,4BAA4B,4DAAc;AAC1C,uBAAuB,4DAAc;AACrC,0BAA0B,4DAAc;AACxC,sBAAsB,4DAAc;AACpC,sBAAsB,4DAAc;AACpC,oBAAoB,4DAAc;AAClC,0BAA0B,4DAAc;AACxC,sBAAsB,4DAAc;AACpC,sBAAsB,6DAAe;AACrC,yBAAyB,6DAAe;AACxC,0BAA0B,4DAAc;AACxC,wBAAwB,4DAAc;AACtC;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;ACxPuG;AAC3E;AACD;AAC3B;AACA;AACA;AACA,+FAAyC,4BAA4B,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,iEAAmB;AAC5B,SAAS,kEAAoB;AAC7B,SAAS,6EAA0B;AACnC,SAAS,yEAA2B;AACpC,MAAM;AACN;AACA,mBAAmB,4DAAc;AACjC,qBAAqB,4DAAc;AACnC,2BAA2B,4DAAc;AACzC,4BAA4B,4DAAc;AAC1C,uBAAuB,4DAAc;AACrC,0BAA0B,4DAAc;AACxC,sBAAsB,4DAAc;AACpC,sBAAsB,4DAAc;AACpC,oBAAoB,4DAAc;AAClC,0BAA0B,4DAAc;AACxC,sBAAsB,4DAAc;AACpC,sBAAsB,6DAAe;AACrC,yBAAyB,6DAAe;AACxC,0BAA0B,4DAAc;AACxC,wBAAwB,4DAAc;AACtC;AACA;AACA,CAAC;AACO;AACR,gD;;;;;;;;;;;;;;;ACxPqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;;;;;;;AC9BuB;AACJ;AACQ;AACF;AACK;AAC9B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;;;;;;;;;;;;;ACrB2B;AACH;AACA;AACY;AACpC,iC;;;;;;;;;;;;;;;;;ACJoD;AAC5B;AACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,qBAAqB;AACrB;AACA,4FAA4F,kBAAkB,0BAA0B,OAAO,mEAAmE,iBAAiB,yBAAyB,OAAO;AACnQ;AACA,sIAAsI,SAAS;AAC/I,iBAAiB,IAAI;AACrB;AACA;AACA,4DAA4D;AAC5D,SAAS,uEAAuB;AAChC,MAAM;AACN;AACA,uBAAuB,4DAAc;AACrC,mBAAmB,4DAAc;AACjC;AACA;AACA,CAAC;AACO;AACR,uD;;;;;;;;;;;;;;;AC1CqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;;;AC1B0F;AAClE;AACS;AACG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4FAA4C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,gDAAgD,IAAI;AACvF;AACA;AACA,mDAAmD;AACnD,SAAS,kEAAoB;AAC7B,SAAS,iEAAmB;AAC5B,SAAS,wEAA0B;AACnC,SAAS,uEAAuB;AAChC,SAAS,wFAAgC;AACzC,MAAM;AACN;AACA,qBAAqB,4DAAc;AACnC,4BAA4B,4DAAc;AAC1C,0BAA0B,4DAAc;AACxC,uBAAuB,4DAAc;AACrC,0BAA0B,4DAAc;AACxC,sBAAsB,4DAAc;AACpC,uBAAuB,4DAAc;AACrC,4BAA4B,4DAAc;AAC1C,oBAAoB,4DAAc;AAClC,qBAAqB,6DAAe;AACpC,sBAAsB,6DAAe;AACrC;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;;;;;;;;;ACpKmB;AACI;AACU;AACJ;AACL;AACG;AACS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;;AC3B8C;AACf;AACf;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,kGAA2C,2DAAa,IAAI;AACrE,MAAM;AACN;AACA,kBAAkB,4DAAc;AAChC,mBAAmB,4DAAc;AACjC,yBAAyB,4FAA8C;AACvE;AACA;AACA,CAAC;AACO;AACR,yC;;;;;;;;;;;;;;;;;;;;;;;;;ACtFuB;AACQ;AACH;AACA;AAC5B,iC;;;;;;;;;;;;;;;;;ACJwC;AACZ;AACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kPAAkP,cAAc;AAChQ;AACA,sCAAsC,oBAAoB,sBAAsB,OAAO;AACvF;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,+EAA2B;AACpC,MAAM;AACN;AACA,qBAAqB,4DAAc;AACnC,qBAAqB,4DAAc;AACnC,kBAAkB,4DAAc;AAChC,mBAAmB,4DAAc;AACjC,iBAAiB,uFAAyC,GAAG,4DAAc;AAC3E,sBAAsB,6FAA+C;AACrE;AACA;AACA,CAAC;AACO;AACR,iD;;;;;;;;;;;;;;;AC3EqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;;;;;;;ACduB;AACJ;AACI;AACQ;AACH;AAC5B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;;;;;;;;;;;;;ACrBoC;AACT;AACH;AACA;AACxB,iC;;;;;;;;;;;;;;;;;ACJ6C;AACrB;AACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,8CAA8C,uBAAuB,OAAO,mEAAmE,kBAAkB,0BAA0B,OAAO,mEAAmE,iBAAiB,yBAAyB,OAAO;AACtT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4DAA4D;AAC5D,SAAS,uEAAuB;AAChC,MAAM;AACN;AACA,CAAC;AACO;AACR,uD;;;;;;;;;;;;;;;ACjDqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;;;;;;ACfA;AAAA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC0F;AACtD;AACZ;AACS;AACd;AACA;AACK;AACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2FAA2C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD;AACnD,SAAS,wEAA0B;AACnC,SAAS,iEAAmB;AAC5B,SAAS,kEAAoB;AAC7B,SAAS,wFAAgC;AACzC,SAAS,uEAAuB;AAChC,MAAM;AACN;AACA,qBAAqB,4DAAc;AACnC,2BAA2B,6DAAe;AAC1C,uBAAuB,4DAAc;AACrC,sBAAsB,4DAAc;AACpC,uBAAuB,4DAAc;AACrC,oBAAoB,4DAAc;AAClC,wBAAwB,4DAAc;AACtC,4BAA4B,4DAAc;AAC1C,mBAAmB,4DAAc;AACjC,qBAAqB,6DAAe;AACpC,sBAAsB,6DAAe;AACrC,yBAAyB,oFAAsC;AAC/D,wBAAwB,yFAA2C;AACnE,qBAAqB,sFAAwC;AAC7D,qBAAqB,sFAAwC;AAC7D,2BAA2B,4FAA8C;AACzE,wBAAwB,yFAA2C;AACnE,yBAAyB,qFAAuC;AAChE,6BAA6B,uFAAyC;AACtE,gCAAgC,0FAA4C;AAC5E,2BAA2B,4FAA8C;AACzE,6BAA6B,uFAAyC;AACtE,iCAAiC,6DAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;;;;;;;;;AC1TuB;AACJ;AACiB;AACT;AACH;AACS;AACJ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BmB;AACE;AACL;AACE;AACF;AACG;AACnB,iC;;;;;;;;;;;;;ACNA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA,6BAA6B,qCAAqC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;;;ACnPoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXyC;AACc;AAEJ;AACA;AACM;AACJ;AACJ;AACU;AACA;AACI;AACR;AACA;AACA;AAEvD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACJ,KAAK,EAAE,MAAM;SACd;QACD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,+DAAc;gBACzB,IAAI,EAAE;oBACJ,KAAK,EAAE,OAAO;iBACf;aACF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,+DAAc;gBACzB,IAAI,EAAE;oBACJ,KAAK,EAAE,OAAO;iBACf;aACF;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,qEAAiB;gBAC5B,IAAI,EAAE;oBAC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","file":"views-base-base-module.js","sourcesContent":["// tslint:disable:max-file-line-count\n/***\n * pause (not yet supported) (?string='hover') - event group name which pauses\n * the cycling of the carousel, if hover pauses on mouseenter and resumes on\n * mouseleave keyboard (not yet supported) (?boolean=true) - if false\n * carousel will not react to keyboard events\n * note: swiping not yet supported\n */\n/****\n * Problems:\n * 1) if we set an active slide via model changes, .active class remains on a\n * current slide.\n * 2) if we have only one slide, we shouldn't show prev/next nav buttons\n * 3) if first or last slide is active and noWrap is true, there should be\n * \"disabled\" class on the nav buttons.\n * 4) default interval should be equal 5000\n */\nimport { Component, EventEmitter, Input, NgZone, Output } from '@angular/core';\nimport { isBs3, LinkedList } from '../utils/index';\nimport { CarouselConfig } from './carousel.config';\nexport var Direction;\n(function (Direction) {\n    Direction[Direction[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    Direction[Direction[\"NEXT\"] = 1] = \"NEXT\";\n    Direction[Direction[\"PREV\"] = 2] = \"PREV\";\n})(Direction || (Direction = {}));\n/**\n * Base element to create carousel\n */\nvar CarouselComponent = /** @class */ (function () {\n    function CarouselComponent(config, ngZone) {\n        this.ngZone = ngZone;\n        /** Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property */\n        this.activeSlideChange = new EventEmitter(false);\n        this._slides = new LinkedList();\n        this.destroyed = false;\n        Object.assign(this, config);\n    }\n    Object.defineProperty(CarouselComponent.prototype, \"activeSlide\", {\n        get: function () {\n            return this._currentActiveSlide;\n        },\n        set: /** Index of currently displayed slide(started for 0) */\n        function (index) {\n            if (this._slides.length && index !== this._currentActiveSlide) {\n                this._select(index);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CarouselComponent.prototype, \"interval\", {\n        get: /**\n           * Delay of item cycling in milliseconds. If false, carousel won't cycle\n           * automatically.\n           */\n        function () {\n            return this._interval;\n        },\n        set: function (value) {\n            this._interval = value;\n            this.restartTimer();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CarouselComponent.prototype, \"slides\", {\n        get: function () {\n            return this._slides.toArray();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CarouselComponent.prototype, \"isBs4\", {\n        get: function () {\n            return !isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CarouselComponent.prototype.ngOnDestroy = function () {\n        this.destroyed = true;\n    };\n    /**\n     * Adds new slide. If this slide is first in collection - set it as active\n     * and starts auto changing\n     * @param slide\n     */\n    /**\n       * Adds new slide. If this slide is first in collection - set it as active\n       * and starts auto changing\n       * @param slide\n       */\n    CarouselComponent.prototype.addSlide = /**\n       * Adds new slide. If this slide is first in collection - set it as active\n       * and starts auto changing\n       * @param slide\n       */\n    function (slide) {\n        this._slides.add(slide);\n        if (this._slides.length === 1) {\n            this._currentActiveSlide = void 0;\n            this.activeSlide = 0;\n            this.play();\n        }\n    };\n    /**\n     * Removes specified slide. If this slide is active - will roll to another\n     * slide\n     * @param slide\n     */\n    /**\n       * Removes specified slide. If this slide is active - will roll to another\n       * slide\n       * @param slide\n       */\n    CarouselComponent.prototype.removeSlide = /**\n       * Removes specified slide. If this slide is active - will roll to another\n       * slide\n       * @param slide\n       */\n    function (slide) {\n        var _this = this;\n        var remIndex = this._slides.indexOf(slide);\n        if (this._currentActiveSlide === remIndex) {\n            // removing of active slide\n            var nextSlideIndex_1 = void 0;\n            if (this._slides.length > 1) {\n                // if this slide last - will roll to first slide, if noWrap flag is\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n                // middle of collection, index of next slide is same to removed\n                // if this slide last - will roll to first slide, if noWrap flag is\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n                // middle of collection, index of next slide is same to removed\n                nextSlideIndex_1 = !this.isLast(remIndex)\n                    ? remIndex\n                    : this.noWrap ? remIndex - 1 : 0;\n            }\n            this._slides.remove(remIndex);\n            // prevents exception with changing some value after checking\n            setTimeout(function () {\n                _this._select(nextSlideIndex_1);\n            }, 0);\n        }\n        else {\n            this._slides.remove(remIndex);\n            var currentSlideIndex_1 = this.getCurrentSlideIndex();\n            setTimeout(function () {\n                // after removing, need to actualize index of current active slide\n                // after removing, need to actualize index of current active slide\n                _this._currentActiveSlide = currentSlideIndex_1;\n                _this.activeSlideChange.emit(_this._currentActiveSlide);\n            }, 0);\n        }\n    };\n    /**\n     * Rolling to next slide\n     * @param force: {boolean} if true - will ignore noWrap flag\n     */\n    /**\n       * Rolling to next slide\n       * @param force: {boolean} if true - will ignore noWrap flag\n       */\n    CarouselComponent.prototype.nextSlide = /**\n       * Rolling to next slide\n       * @param force: {boolean} if true - will ignore noWrap flag\n       */\n    function (force) {\n        if (force === void 0) { force = false; }\n        this.activeSlide = this.findNextSlideIndex(Direction.NEXT, force);\n    };\n    /**\n     * Rolling to previous slide\n     * @param force: {boolean} if true - will ignore noWrap flag\n     */\n    /**\n       * Rolling to previous slide\n       * @param force: {boolean} if true - will ignore noWrap flag\n       */\n    CarouselComponent.prototype.previousSlide = /**\n       * Rolling to previous slide\n       * @param force: {boolean} if true - will ignore noWrap flag\n       */\n    function (force) {\n        if (force === void 0) { force = false; }\n        this.activeSlide = this.findNextSlideIndex(Direction.PREV, force);\n    };\n    /**\n     * Rolling to specified slide\n     * @param index: {number} index of slide, which must be shown\n     */\n    /**\n       * Rolling to specified slide\n       * @param index: {number} index of slide, which must be shown\n       */\n    CarouselComponent.prototype.selectSlide = /**\n       * Rolling to specified slide\n       * @param index: {number} index of slide, which must be shown\n       */\n    function (index) {\n        this.activeSlide = index;\n    };\n    /**\n     * Starts a auto changing of slides\n     */\n    /**\n       * Starts a auto changing of slides\n       */\n    CarouselComponent.prototype.play = /**\n       * Starts a auto changing of slides\n       */\n    function () {\n        if (!this.isPlaying) {\n            this.isPlaying = true;\n            this.restartTimer();\n        }\n    };\n    /**\n     * Stops a auto changing of slides\n     */\n    /**\n       * Stops a auto changing of slides\n       */\n    CarouselComponent.prototype.pause = /**\n       * Stops a auto changing of slides\n       */\n    function () {\n        if (!this.noPause) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    };\n    /**\n     * Finds and returns index of currently displayed slide\n     * @returns {number}\n     */\n    /**\n       * Finds and returns index of currently displayed slide\n       * @returns {number}\n       */\n    CarouselComponent.prototype.getCurrentSlideIndex = /**\n       * Finds and returns index of currently displayed slide\n       * @returns {number}\n       */\n    function () {\n        return this._slides.findIndex(function (slide) { return slide.active; });\n    };\n    /**\n     * Defines, whether the specified index is last in collection\n     * @param index\n     * @returns {boolean}\n     */\n    /**\n       * Defines, whether the specified index is last in collection\n       * @param index\n       * @returns {boolean}\n       */\n    CarouselComponent.prototype.isLast = /**\n       * Defines, whether the specified index is last in collection\n       * @param index\n       * @returns {boolean}\n       */\n    function (index) {\n        return index + 1 >= this._slides.length;\n    };\n    /**\n     * Defines next slide index, depending of direction\n     * @param direction: Direction(UNKNOWN|PREV|NEXT)\n     * @param force: {boolean} if TRUE - will ignore noWrap flag, else will\n     *   return undefined if next slide require wrapping\n     * @returns {any}\n     */\n    /**\n       * Defines next slide index, depending of direction\n       * @param direction: Direction(UNKNOWN|PREV|NEXT)\n       * @param force: {boolean} if TRUE - will ignore noWrap flag, else will\n       *   return undefined if next slide require wrapping\n       * @returns {any}\n       */\n    CarouselComponent.prototype.findNextSlideIndex = /**\n       * Defines next slide index, depending of direction\n       * @param direction: Direction(UNKNOWN|PREV|NEXT)\n       * @param force: {boolean} if TRUE - will ignore noWrap flag, else will\n       *   return undefined if next slide require wrapping\n       * @returns {any}\n       */\n    function (direction, force) {\n        var nextSlideIndex = 0;\n        if (!force &&\n            (this.isLast(this.activeSlide) &&\n                direction !== Direction.PREV &&\n                this.noWrap)) {\n            return void 0;\n        }\n        switch (direction) {\n            case Direction.NEXT:\n                // if this is last slide, not force, looping is disabled\n                // and need to going forward - select current slide, as a next\n                nextSlideIndex = !this.isLast(this._currentActiveSlide)\n                    ? this._currentActiveSlide + 1\n                    : !force && this.noWrap ? this._currentActiveSlide : 0;\n                break;\n            case Direction.PREV:\n                // if this is first slide, not force, looping is disabled\n                // and need to going backward - select current slide, as a next\n                nextSlideIndex =\n                    this._currentActiveSlide > 0\n                        ? this._currentActiveSlide - 1\n                        : !force && this.noWrap\n                            ? this._currentActiveSlide\n                            : this._slides.length - 1;\n                break;\n            default:\n                throw new Error('Unknown direction');\n        }\n        return nextSlideIndex;\n    };\n    /**\n     * Sets a slide, which specified through index, as active\n     * @param index\n     * @private\n     */\n    /**\n       * Sets a slide, which specified through index, as active\n       * @param index\n       * @private\n       */\n    CarouselComponent.prototype._select = /**\n       * Sets a slide, which specified through index, as active\n       * @param index\n       * @private\n       */\n    function (index) {\n        if (isNaN(index)) {\n            this.pause();\n            return;\n        }\n        var currentSlide = this._slides.get(this._currentActiveSlide);\n        if (currentSlide) {\n            currentSlide.active = false;\n        }\n        var nextSlide = this._slides.get(index);\n        if (nextSlide) {\n            this._currentActiveSlide = index;\n            nextSlide.active = true;\n            this.activeSlide = index;\n            this.activeSlideChange.emit(index);\n        }\n    };\n    /**\n     * Starts loop of auto changing of slides\n     */\n    /**\n       * Starts loop of auto changing of slides\n       */\n    CarouselComponent.prototype.restartTimer = /**\n       * Starts loop of auto changing of slides\n       */\n    function () {\n        var _this = this;\n        this.resetTimer();\n        var interval = +this.interval;\n        if (!isNaN(interval) && interval > 0) {\n            this.currentInterval = this.ngZone.runOutsideAngular(function () {\n                return setInterval(function () {\n                    var nInterval = +_this.interval;\n                    _this.ngZone.run(function () {\n                        if (_this.isPlaying &&\n                            !isNaN(_this.interval) &&\n                            nInterval > 0 &&\n                            _this.slides.length) {\n                            _this.nextSlide();\n                        }\n                        else {\n                            _this.pause();\n                        }\n                    });\n                }, interval);\n            });\n        }\n    };\n    /**\n     * Stops loop of auto changing of slides\n     */\n    /**\n       * Stops loop of auto changing of slides\n       */\n    CarouselComponent.prototype.resetTimer = /**\n       * Stops loop of auto changing of slides\n       */\n    function () {\n        if (this.currentInterval) {\n            clearInterval(this.currentInterval);\n            this.currentInterval = void 0;\n        }\n    };\n    CarouselComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'carousel',\n                    template: \"<div (mouseenter)=\\\"pause()\\\" (mouseleave)=\\\"play()\\\" (mouseup)=\\\"play()\\\" class=\\\"carousel slide\\\"> <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\"> <li *ngFor=\\\"let slidez of slides; let i = index;\\\" [class.active]=\\\"slidez.active === true\\\" (click)=\\\"selectSlide(i)\\\"></li> </ol> <div class=\\\"carousel-inner\\\"><ng-content></ng-content></div> <a class=\\\"left carousel-control carousel-control-prev\\\" [class.disabled]=\\\"activeSlide === 0 && noWrap\\\" (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"> <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span> <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span> </a> <a class=\\\"right carousel-control carousel-control-next\\\" (click)=\\\"nextSlide()\\\"  [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\" *ngIf=\\\"slides.length > 1\\\"> <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Next</span> </a> </div> \"\n                },] },\n    ];\n    /** @nocollapse */\n    CarouselComponent.ctorParameters = function () { return [\n        { type: CarouselConfig, },\n        { type: NgZone, },\n    ]; };\n    CarouselComponent.propDecorators = {\n        \"noWrap\": [{ type: Input },],\n        \"noPause\": [{ type: Input },],\n        \"showIndicators\": [{ type: Input },],\n        \"activeSlideChange\": [{ type: Output },],\n        \"activeSlide\": [{ type: Input },],\n        \"interval\": [{ type: Input },],\n    };\n    return CarouselComponent;\n}());\nexport { CarouselComponent };\n//# sourceMappingURL=carousel.component.js.map","import { Injectable } from '@angular/core';\nvar CarouselConfig = /** @class */ (function () {\n    function CarouselConfig() {\n        /** Default interval of auto changing of slides */\n        this.interval = 5000;\n        /** Is loop of auto changing of slides can be paused */\n        this.noPause = false;\n        /** Is slides can wrap from the last to the first slide */\n        this.noWrap = false;\n        /** Show carousel-indicators */\n        this.showIndicators = true;\n    }\n    CarouselConfig.decorators = [\n        { type: Injectable },\n    ];\n    return CarouselConfig;\n}());\nexport { CarouselConfig };\n//# sourceMappingURL=carousel.config.js.map","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CarouselComponent } from './carousel.component';\nimport { SlideComponent } from './slide.component';\nimport { CarouselConfig } from './carousel.config';\nvar CarouselModule = /** @class */ (function () {\n    function CarouselModule() {\n    }\n    CarouselModule.forRoot = function () {\n        return { ngModule: CarouselModule, providers: [] };\n    };\n    CarouselModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [SlideComponent, CarouselComponent],\n                    exports: [SlideComponent, CarouselComponent],\n                    providers: [CarouselConfig]\n                },] },\n    ];\n    return CarouselModule;\n}());\nexport { CarouselModule };\n//# sourceMappingURL=carousel.module.js.map","export { CarouselComponent } from './carousel.component';\nexport { CarouselModule } from './carousel.module';\nexport { SlideComponent } from './slide.component';\nexport { CarouselConfig } from './carousel.config';\n//# sourceMappingURL=index.js.map","import { Component, HostBinding, Input } from '@angular/core';\nimport { CarouselComponent } from './carousel.component';\nvar SlideComponent = /** @class */ (function () {\n    function SlideComponent(carousel) {\n        /** Wraps element by appropriate CSS classes */\n        this.addClass = true;\n        this.carousel = carousel;\n    }\n    /** Fires changes in container collection after adding a new slide instance */\n    /** Fires changes in container collection after adding a new slide instance */\n    SlideComponent.prototype.ngOnInit = /** Fires changes in container collection after adding a new slide instance */\n    function () {\n        this.carousel.addSlide(this);\n    };\n    /** Fires changes in container collection after removing of this slide instance */\n    /** Fires changes in container collection after removing of this slide instance */\n    SlideComponent.prototype.ngOnDestroy = /** Fires changes in container collection after removing of this slide instance */\n    function () {\n        this.carousel.removeSlide(this);\n    };\n    SlideComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'slide',\n                    template: \"\\n    <div [class.active]=\\\"active\\\" class=\\\"item\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n                    host: {\n                        '[attr.aria-hidden]': '!active'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    SlideComponent.ctorParameters = function () { return [\n        { type: CarouselComponent, },\n    ]; };\n    SlideComponent.propDecorators = {\n        \"active\": [{ type: HostBinding, args: ['class.active',] }, { type: Input },],\n        \"addClass\": [{ type: HostBinding, args: ['class.item',] }, { type: HostBinding, args: ['class.carousel-item',] },],\n    };\n    return SlideComponent;\n}());\nexport { SlideComponent };\n//# sourceMappingURL=slide.component.js.map","import { Directive, ElementRef, EventEmitter, HostBinding, Input, Output, Renderer2 } from '@angular/core';\nvar CollapseDirective = /** @class */ (function () {\n    function CollapseDirective(_el, _renderer) {\n        this._el = _el;\n        this._renderer = _renderer;\n        /** This event fires as soon as content collapses */\n        this.collapsed = new EventEmitter();\n        /** This event fires as soon as content becomes visible */\n        this.expanded = new EventEmitter();\n        // shown\n        this.isExpanded = true;\n        // hidden\n        this.isCollapsed = false;\n        // stale state\n        this.isCollapse = true;\n        // animation state\n        this.isCollapsing = false;\n    }\n    Object.defineProperty(CollapseDirective.prototype, \"collapse\", {\n        get: function () {\n            return this.isExpanded;\n        },\n        set: /** A flag indicating visibility of content (shown or hidden) */\n        function (value) {\n            this.isExpanded = value;\n            this.toggle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** allows to manually toggle content visibility */\n    /** allows to manually toggle content visibility */\n    CollapseDirective.prototype.toggle = /** allows to manually toggle content visibility */\n    function () {\n        if (this.isExpanded) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    };\n    /** allows to manually hide content */\n    /** allows to manually hide content */\n    CollapseDirective.prototype.hide = /** allows to manually hide content */\n    function () {\n        this.isCollapse = false;\n        this.isCollapsing = true;\n        this.isExpanded = false;\n        this.isCollapsed = true;\n        this.isCollapse = true;\n        this.isCollapsing = false;\n        this.display = 'none';\n        this.collapsed.emit(this);\n    };\n    /** allows to manually show collapsed content */\n    /** allows to manually show collapsed content */\n    CollapseDirective.prototype.show = /** allows to manually show collapsed content */\n    function () {\n        this.isCollapse = false;\n        this.isCollapsing = true;\n        this.isExpanded = true;\n        this.isCollapsed = false;\n        this.display = 'block';\n        // this.height = 'auto';\n        this.isCollapse = true;\n        this.isCollapsing = false;\n        this._renderer.setStyle(this._el.nativeElement, 'overflow', 'visible');\n        this._renderer.setStyle(this._el.nativeElement, 'height', 'auto');\n        this.expanded.emit(this);\n    };\n    CollapseDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[collapse]',\n                    exportAs: 'bs-collapse',\n                    host: {\n                        '[class.collapse]': 'true'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CollapseDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    CollapseDirective.propDecorators = {\n        \"collapsed\": [{ type: Output },],\n        \"expanded\": [{ type: Output },],\n        \"display\": [{ type: HostBinding, args: ['style.display',] },],\n        \"isExpanded\": [{ type: HostBinding, args: ['class.in',] }, { type: HostBinding, args: ['class.show',] }, { type: HostBinding, args: ['attr.aria-expanded',] },],\n        \"isCollapsed\": [{ type: HostBinding, args: ['attr.aria-hidden',] },],\n        \"isCollapse\": [{ type: HostBinding, args: ['class.collapse',] },],\n        \"isCollapsing\": [{ type: HostBinding, args: ['class.collapsing',] },],\n        \"collapse\": [{ type: Input },],\n    };\n    return CollapseDirective;\n}());\nexport { CollapseDirective };\n//# sourceMappingURL=collapse.directive.js.map","import { NgModule } from '@angular/core';\nimport { CollapseDirective } from './collapse.directive';\nvar CollapseModule = /** @class */ (function () {\n    function CollapseModule() {\n    }\n    CollapseModule.forRoot = function () {\n        return { ngModule: CollapseModule, providers: [] };\n    };\n    CollapseModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [CollapseDirective],\n                    exports: [CollapseDirective]\n                },] },\n    ];\n    return CollapseModule;\n}());\nexport { CollapseModule };\n//# sourceMappingURL=collapse.module.js.map","export { CollapseDirective } from './collapse.directive';\nexport { CollapseModule } from './collapse.module';\n//# sourceMappingURL=index.js.map","export { PagerComponent } from './pager.component';\nexport { PaginationComponent } from './pagination.component';\nexport { PaginationModule } from './pagination.module';\nexport { PaginationConfig } from './pagination.config';\n//# sourceMappingURL=index.js.map","import { Component, ElementRef, Renderer2, Input, Output, EventEmitter, forwardRef, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PaginationConfig } from './pagination.config';\nexport var PAGER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(function () { return PagerComponent; }),\n    multi: true\n};\nvar PagerComponent = /** @class */ (function () {\n    function PagerComponent(renderer, elementRef, paginationConfig, changeDetection) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to\n           * object with current page index and number of items per page\n           */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n        }\n    }\n    Object.defineProperty(PagerComponent.prototype, \"itemsPerPage\", {\n        get: /** maximum number of items per page. If value less than 1 will display all items on one page */\n        function () {\n            return this._itemsPerPage;\n        },\n        set: function (v) {\n            this._itemsPerPage = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PagerComponent.prototype, \"totalItems\", {\n        get: /** total number of items in all pages */\n        function () {\n            return this._totalItems;\n        },\n        set: function (v) {\n            this._totalItems = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PagerComponent.prototype, \"totalPages\", {\n        get: function () {\n            return this._totalPages;\n        },\n        set: function (v) {\n            this._totalPages = v;\n            this.numPages.emit(v);\n            if (this.inited) {\n                this.selectPage(this.page);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PagerComponent.prototype, \"page\", {\n        get: function () {\n            return this._page;\n        },\n        set: function (value) {\n            var _previous = this._page;\n            this._page = value > this.totalPages ? this.totalPages : value || 1;\n            this.changeDetection.markForCheck();\n            if (_previous === this._page || typeof _previous === 'undefined') {\n                return;\n            }\n            this.pageChanged.emit({\n                page: this._page,\n                itemsPerPage: this.itemsPerPage\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PagerComponent.prototype.configureOptions = function (config) {\n        this.config = Object.assign({}, config);\n    };\n    PagerComponent.prototype.ngOnInit = function () {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    };\n    PagerComponent.prototype.writeValue = function (value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    };\n    PagerComponent.prototype.getText = function (key) {\n        return this[key + \"Text\"] || this.config[key + \"Text\"];\n    };\n    PagerComponent.prototype.noPrevious = function () {\n        return this.page === 1;\n    };\n    PagerComponent.prototype.noNext = function () {\n        return this.page === this.totalPages;\n    };\n    PagerComponent.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    PagerComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    PagerComponent.prototype.selectPage = function (page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                var target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    };\n    // Create page object used in template\n    // Create page object used in template\n    PagerComponent.prototype.makePage = \n    // Create page object used in template\n    function (num, text, active) {\n        return { text: text, number: num, active: active };\n    };\n    PagerComponent.prototype.getPages = function (currentPage, totalPages) {\n        var pages = [];\n        // Default page limits\n        var startPage = 1;\n        var endPage = totalPages;\n        var isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (var num = startPage; num <= endPage; num++) {\n            var page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                var previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                var nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    };\n    // base class\n    // base class\n    PagerComponent.prototype.calculateTotalPages = \n    // base class\n    function () {\n        var totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    };\n    PagerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'pager',\n                    template: \"<ul class=\\\"pager\\\"> <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\" [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\" class=\\\"{{ pageBtnClass }}\\\"> <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a> </li> <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\" [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\" class=\\\"{{ pageBtnClass }}\\\"> <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a> </li> </ul> \",\n                    providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    PagerComponent.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n        { type: PaginationConfig, },\n        { type: ChangeDetectorRef, },\n    ]; };\n    PagerComponent.propDecorators = {\n        \"align\": [{ type: Input },],\n        \"maxSize\": [{ type: Input },],\n        \"boundaryLinks\": [{ type: Input },],\n        \"directionLinks\": [{ type: Input },],\n        \"firstText\": [{ type: Input },],\n        \"previousText\": [{ type: Input },],\n        \"nextText\": [{ type: Input },],\n        \"lastText\": [{ type: Input },],\n        \"rotate\": [{ type: Input },],\n        \"pageBtnClass\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"numPages\": [{ type: Output },],\n        \"pageChanged\": [{ type: Output },],\n        \"itemsPerPage\": [{ type: Input },],\n        \"totalItems\": [{ type: Input },],\n    };\n    return PagerComponent;\n}());\nexport { PagerComponent };\n//# sourceMappingURL=pager.component.js.map","import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, forwardRef, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PaginationConfig } from './pagination.config';\nexport var PAGINATION_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(function () { return PaginationComponent; }),\n    multi: true\n};\nvar PaginationComponent = /** @class */ (function () {\n    function PaginationComponent(renderer, elementRef, paginationConfig, changeDetection) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n           * with current page index and number of items per page\n           */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(paginationConfig.main);\n        }\n    }\n    Object.defineProperty(PaginationComponent.prototype, \"itemsPerPage\", {\n        get: /** maximum number of items per page. If value less than 1 will display all items on one page */\n        function () {\n            return this._itemsPerPage;\n        },\n        set: function (v) {\n            this._itemsPerPage = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PaginationComponent.prototype, \"totalItems\", {\n        get: /** total number of items in all pages */\n        function () {\n            return this._totalItems;\n        },\n        set: function (v) {\n            this._totalItems = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PaginationComponent.prototype, \"totalPages\", {\n        get: function () {\n            return this._totalPages;\n        },\n        set: function (v) {\n            this._totalPages = v;\n            this.numPages.emit(v);\n            if (this.inited) {\n                this.selectPage(this.page);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PaginationComponent.prototype, \"page\", {\n        get: function () {\n            return this._page;\n        },\n        set: function (value) {\n            var _previous = this._page;\n            this._page = value > this.totalPages ? this.totalPages : value || 1;\n            this.changeDetection.markForCheck();\n            if (_previous === this._page || typeof _previous === 'undefined') {\n                return;\n            }\n            this.pageChanged.emit({\n                page: this._page,\n                itemsPerPage: this.itemsPerPage\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PaginationComponent.prototype.configureOptions = function (config) {\n        this.config = Object.assign({}, config);\n    };\n    PaginationComponent.prototype.ngOnInit = function () {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    };\n    PaginationComponent.prototype.writeValue = function (value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    };\n    PaginationComponent.prototype.getText = function (key) {\n        return this[key + \"Text\"] || this.config[key + \"Text\"];\n    };\n    PaginationComponent.prototype.noPrevious = function () {\n        return this.page === 1;\n    };\n    PaginationComponent.prototype.noNext = function () {\n        return this.page === this.totalPages;\n    };\n    PaginationComponent.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    PaginationComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    PaginationComponent.prototype.selectPage = function (page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                var target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    };\n    // Create page object used in template\n    // Create page object used in template\n    PaginationComponent.prototype.makePage = \n    // Create page object used in template\n    function (num, text, active) {\n        return { text: text, number: num, active: active };\n    };\n    PaginationComponent.prototype.getPages = function (currentPage, totalPages) {\n        var pages = [];\n        // Default page limits\n        var startPage = 1;\n        var endPage = totalPages;\n        var isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (var num = startPage; num <= endPage; num++) {\n            var page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                var previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                var nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    };\n    // base class\n    // base class\n    PaginationComponent.prototype.calculateTotalPages = \n    // base class\n    function () {\n        var totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    };\n    PaginationComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'pagination',\n                    template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\"> <li class=\\\"pagination-first page-item\\\" *ngIf=\\\"boundaryLinks\\\" [class.disabled]=\\\"noPrevious()||disabled\\\"> <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\" [innerHTML]=\\\"getText('first')\\\"></a> </li> <li class=\\\"pagination-prev page-item\\\" *ngIf=\\\"directionLinks\\\" [class.disabled]=\\\"noPrevious()||disabled\\\"> <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\" [innerHTML]=\\\"getText('previous')\\\"></a> </li> <li *ngFor=\\\"let pg of pages\\\" [class.active]=\\\"pg.active\\\" [class.disabled]=\\\"disabled&&!pg.active\\\" class=\\\"pagination-page page-item\\\"> <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\" [innerHTML]=\\\"pg.text\\\"></a> </li> <li class=\\\"pagination-next page-item\\\" *ngIf=\\\"directionLinks\\\" [class.disabled]=\\\"noNext()||disabled\\\"> <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\" [innerHTML]=\\\"getText('next')\\\"></a></li> <li class=\\\"pagination-last page-item\\\" *ngIf=\\\"boundaryLinks\\\" [class.disabled]=\\\"noNext()||disabled\\\"> <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\" [innerHTML]=\\\"getText('last')\\\"></a></li> </ul> \",\n                    providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    PaginationComponent.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n        { type: PaginationConfig, },\n        { type: ChangeDetectorRef, },\n    ]; };\n    PaginationComponent.propDecorators = {\n        \"align\": [{ type: Input },],\n        \"maxSize\": [{ type: Input },],\n        \"boundaryLinks\": [{ type: Input },],\n        \"directionLinks\": [{ type: Input },],\n        \"firstText\": [{ type: Input },],\n        \"previousText\": [{ type: Input },],\n        \"nextText\": [{ type: Input },],\n        \"lastText\": [{ type: Input },],\n        \"rotate\": [{ type: Input },],\n        \"pageBtnClass\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"numPages\": [{ type: Output },],\n        \"pageChanged\": [{ type: Output },],\n        \"itemsPerPage\": [{ type: Input },],\n        \"totalItems\": [{ type: Input },],\n    };\n    return PaginationComponent;\n}());\nexport { PaginationComponent };\n//# sourceMappingURL=pagination.component.js.map","import { Injectable } from '@angular/core';\n/** Provides default values for Pagination and pager components */\nvar PaginationConfig = /** @class */ (function () {\n    function PaginationConfig() {\n        this.main = {\n            maxSize: void 0,\n            itemsPerPage: 10,\n            boundaryLinks: false,\n            directionLinks: true,\n            firstText: 'First',\n            previousText: 'Previous',\n            nextText: 'Next',\n            lastText: 'Last',\n            pageBtnClass: '',\n            rotate: true\n        };\n        this.pager = {\n            itemsPerPage: 15,\n            previousText: '« Previous',\n            nextText: 'Next »',\n            pageBtnClass: '',\n            align: true\n        };\n    }\n    PaginationConfig.decorators = [\n        { type: Injectable },\n    ];\n    return PaginationConfig;\n}());\nexport { PaginationConfig };\n//# sourceMappingURL=pagination.config.js.map","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PaginationConfig } from './pagination.config';\nimport { PagerComponent } from './pager.component';\nimport { PaginationComponent } from './pagination.component';\nvar PaginationModule = /** @class */ (function () {\n    function PaginationModule() {\n    }\n    PaginationModule.forRoot = function () {\n        return { ngModule: PaginationModule, providers: [PaginationConfig] };\n    };\n    PaginationModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [PagerComponent, PaginationComponent],\n                    exports: [PagerComponent, PaginationComponent]\n                },] },\n    ];\n    return PaginationModule;\n}());\nexport { PaginationModule };\n//# sourceMappingURL=pagination.module.js.map","export { PopoverDirective } from './popover.directive';\nexport { PopoverModule } from './popover.module';\nexport { PopoverConfig } from './popover.config';\nexport { PopoverContainerComponent } from './popover-container.component';\n//# sourceMappingURL=index.js.map","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/theme-provider';\nvar PopoverContainerComponent = /** @class */ (function () {\n    function PopoverContainerComponent(config) {\n        Object.assign(this, config);\n    }\n    Object.defineProperty(PopoverContainerComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PopoverContainerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'popover-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // tslint:disable-next-line\n                    host: {\n                        '[class]': '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n                        '[class.show]': '!isBs3',\n                        role: 'tooltip',\n                        style: 'display:block;'\n                    },\n                    styles: [\n                        \"\\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\\n      left: 50%;\\n      margin-left: -8px;\\n    }\\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\\n      top: 50%;\\n      margin-top: -8px;\\n    }\\n  \"\n                    ],\n                    template: \"<div class=\\\"popover-arrow arrow\\\"></div> <h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3> <div class=\\\"popover-content popover-body\\\"> <ng-content></ng-content> </div> \"\n                },] },\n    ];\n    /** @nocollapse */\n    PopoverContainerComponent.ctorParameters = function () { return [\n        { type: PopoverConfig, },\n    ]; };\n    PopoverContainerComponent.propDecorators = {\n        \"placement\": [{ type: Input },],\n        \"title\": [{ type: Input },],\n    };\n    return PopoverContainerComponent;\n}());\nexport { PopoverContainerComponent };\n//# sourceMappingURL=popover-container.component.js.map","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\nvar PopoverConfig = /** @class */ (function () {\n    function PopoverConfig() {\n        /**\n           * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n           */\n        this.placement = 'top';\n        /**\n           * Specifies events that should trigger. Supports a space separated list of\n           * event names.\n           */\n        this.triggers = 'click';\n        this.outsideClick = false;\n    }\n    PopoverConfig.decorators = [\n        { type: Injectable },\n    ];\n    return PopoverConfig;\n}());\nexport { PopoverConfig };\n//# sourceMappingURL=popover.config.js.map","import { Directive, ElementRef, EventEmitter, Input, Output, Renderer2, ViewContainerRef } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PopoverContainerComponent } from './popover-container.component';\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nvar PopoverDirective = /** @class */ (function () {\n    function PopoverDirective(_elementRef, _renderer, _viewContainerRef, _config, cis) {\n        /**\n           * Close popover on outside click\n           */\n        this.outsideClick = false;\n        /**\n           * Css class for popover container\n           */\n        this.containerClass = '';\n        this._isInited = false;\n        this._popover = cis\n            .createLoader(_elementRef, _viewContainerRef, _renderer)\n            .provide({ provide: PopoverConfig, useValue: _config });\n        Object.assign(this, _config);\n        this.onShown = this._popover.onShown;\n        this.onHidden = this._popover.onHidden;\n        // fix: no focus on button on Mac OS #1795\n        if (typeof window !== 'undefined') {\n            _elementRef.nativeElement.addEventListener('click', function () {\n                try {\n                    _elementRef.nativeElement.focus();\n                }\n                catch (err) {\n                    return;\n                }\n            });\n        }\n    }\n    Object.defineProperty(PopoverDirective.prototype, \"isOpen\", {\n        get: /**\n           * Returns whether or not the popover is currently being shown\n           */\n        function () {\n            return this._popover.isShown;\n        },\n        set: function (value) {\n            if (value) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    /**\n       * Opens an element’s popover. This is considered a “manual” triggering of\n       * the popover.\n       */\n    PopoverDirective.prototype.show = /**\n       * Opens an element’s popover. This is considered a “manual” triggering of\n       * the popover.\n       */\n    function () {\n        if (this._popover.isShown || !this.popover) {\n            return;\n        }\n        this._popover\n            .attach(PopoverContainerComponent)\n            .to(this.container)\n            .position({ attachment: this.placement })\n            .show({\n            content: this.popover,\n            context: this.popoverContext,\n            placement: this.placement,\n            title: this.popoverTitle,\n            containerClass: this.containerClass\n        });\n        this.isOpen = true;\n    };\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    /**\n       * Closes an element’s popover. This is considered a “manual” triggering of\n       * the popover.\n       */\n    PopoverDirective.prototype.hide = /**\n       * Closes an element’s popover. This is considered a “manual” triggering of\n       * the popover.\n       */\n    function () {\n        if (this.isOpen) {\n            this._popover.hide();\n            this.isOpen = false;\n        }\n    };\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    /**\n       * Toggles an element’s popover. This is considered a “manual” triggering of\n       * the popover.\n       */\n    PopoverDirective.prototype.toggle = /**\n       * Toggles an element’s popover. This is considered a “manual” triggering of\n       * the popover.\n       */\n    function () {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    };\n    PopoverDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        this._popover.listen({\n            triggers: this.triggers,\n            outsideClick: this.outsideClick,\n            show: function () { return _this.show(); }\n        });\n    };\n    PopoverDirective.prototype.ngOnDestroy = function () {\n        this._popover.dispose();\n    };\n    PopoverDirective.decorators = [\n        { type: Directive, args: [{ selector: '[popover]', exportAs: 'bs-popover' },] },\n    ];\n    /** @nocollapse */\n    PopoverDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: ViewContainerRef, },\n        { type: PopoverConfig, },\n        { type: ComponentLoaderFactory, },\n    ]; };\n    PopoverDirective.propDecorators = {\n        \"popover\": [{ type: Input },],\n        \"popoverContext\": [{ type: Input },],\n        \"popoverTitle\": [{ type: Input },],\n        \"placement\": [{ type: Input },],\n        \"outsideClick\": [{ type: Input },],\n        \"triggers\": [{ type: Input },],\n        \"container\": [{ type: Input },],\n        \"containerClass\": [{ type: Input },],\n        \"isOpen\": [{ type: Input },],\n        \"onShown\": [{ type: Output },],\n        \"onHidden\": [{ type: Output },],\n    };\n    return PopoverDirective;\n}());\nexport { PopoverDirective };\n//# sourceMappingURL=popover.directive.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\nvar PopoverModule = /** @class */ (function () {\n    function PopoverModule() {\n    }\n    PopoverModule.forRoot = function () {\n        return {\n            ngModule: PopoverModule,\n            providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n        };\n    };\n    PopoverModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [PopoverDirective, PopoverContainerComponent],\n                    exports: [PopoverDirective],\n                    entryComponents: [PopoverContainerComponent]\n                },] },\n    ];\n    return PopoverModule;\n}());\nexport { PopoverModule };\n//# sourceMappingURL=popover.module.js.map","import { Component, Host, HostBinding, Input } from '@angular/core';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from '../utils/theme-provider';\n// todo: number pipe\n// todo: use query from progress?\nvar BarComponent = /** @class */ (function () {\n    function BarComponent(progress) {\n        this.percent = 0;\n        this.progress = progress;\n    }\n    Object.defineProperty(BarComponent.prototype, \"value\", {\n        get: /** current value of progress bar */\n        function () {\n            return this._value;\n        },\n        set: function (v) {\n            if (!v && v !== 0) {\n                return;\n            }\n            this._value = v;\n            this.recalculatePercentage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"setBarWidth\", {\n        get: function () {\n            this.recalculatePercentage();\n            return this.percent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarComponent.prototype.ngOnInit = function () {\n        this.progress.addBar(this);\n    };\n    BarComponent.prototype.ngOnDestroy = function () {\n        this.progress.removeBar(this);\n    };\n    BarComponent.prototype.recalculatePercentage = function () {\n        this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n        var totalPercentage = this.progress.bars\n            .reduce(function (total, bar) {\n            return total + bar.percent;\n        }, 0);\n        if (totalPercentage > 100) {\n            this.percent -= totalPercentage - 100;\n        }\n    };\n    BarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'bar',\n                    template: \"<ng-content></ng-content> \",\n                    host: {\n                        role: 'progressbar',\n                        'aria-valuemin': '0',\n                        '[class]': '\"progress-bar \" + (type ? \"progress-bar-\" + type + \" bg-\" + type : \"\")',\n                        '[class.progress-bar-animated]': '!isBs3 && animate',\n                        '[class.progress-bar-striped]': 'striped',\n                        '[class.active]': 'isBs3 && animate',\n                        '[attr.aria-valuenow]': 'value',\n                        '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n                        '[attr.aria-valuemax]': 'max',\n                        '[style.height.%]': '\"100\"'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    BarComponent.ctorParameters = function () { return [\n        { type: ProgressbarComponent, decorators: [{ type: Host },] },\n    ]; };\n    BarComponent.propDecorators = {\n        \"type\": [{ type: Input },],\n        \"value\": [{ type: Input },],\n        \"setBarWidth\": [{ type: HostBinding, args: ['style.width.%',] },],\n    };\n    return BarComponent;\n}());\nexport { BarComponent };\n//# sourceMappingURL=bar.component.js.map","export { BarComponent } from './bar.component';\nexport { ProgressbarComponent } from './progressbar.component';\nexport { ProgressbarModule } from './progressbar.module';\nexport { ProgressbarConfig } from './progressbar.config';\n//# sourceMappingURL=index.js.map","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { isBs3 } from '../utils/index';\nvar ProgressbarComponent = /** @class */ (function () {\n    function ProgressbarComponent(config) {\n        this.isStacked = false;\n        this.addClass = true;\n        this.bars = [];\n        this._max = 100;\n        Object.assign(this, config);\n    }\n    Object.defineProperty(ProgressbarComponent.prototype, \"value\", {\n        set: /** current value of progress bar. Could be a number or array of objects\n           * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n           */\n        function (value) {\n            this.isStacked = Array.isArray(value);\n            this._value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"max\", {\n        get: /** maximum total value of progress element */\n        function () {\n            return this._max;\n        },\n        set: function (v) {\n            this._max = v;\n            this.bars.forEach(function (bar) {\n                bar.recalculatePercentage();\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProgressbarComponent.prototype.addBar = function (bar) {\n        bar.animate = this.animate;\n        bar.striped = this.striped;\n        this.bars.push(bar);\n    };\n    ProgressbarComponent.prototype.removeBar = function (bar) {\n        this.bars.splice(this.bars.indexOf(bar), 1);\n    };\n    ProgressbarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'progressbar',\n                    template: \"<bar [type]=\\\"type\\\" [value]=\\\"_value\\\" *ngIf=\\\"!isStacked\\\"> <ng-content></ng-content> </bar> <ng-template [ngIf]=\\\"isStacked\\\"> <bar *ngFor=\\\"let item of _value\\\" [type]=\\\"item.type\\\" [value]=\\\"item.value\\\">{{ item.label }}</bar> </ng-template> \",\n                    styles: [\n                        \"\\n    :host {\\n      width: 100%;\\n      display: flex;\\n    }\\n  \"\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ProgressbarComponent.ctorParameters = function () { return [\n        { type: ProgressbarConfig, },\n    ]; };\n    ProgressbarComponent.propDecorators = {\n        \"animate\": [{ type: Input },],\n        \"striped\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"value\": [{ type: Input },],\n        \"max\": [{ type: HostBinding, args: ['attr.max',] }, { type: Input },],\n        \"addClass\": [{ type: HostBinding, args: ['class.progress',] },],\n    };\n    return ProgressbarComponent;\n}());\nexport { ProgressbarComponent };\n//# sourceMappingURL=progressbar.component.js.map","import { Injectable } from '@angular/core';\nvar ProgressbarConfig = /** @class */ (function () {\n    function ProgressbarConfig() {\n        /** if `true` changing value of progress bar will be animated */\n        this.animate = false;\n        /** maximum total value of progress element */\n        this.max = 100;\n    }\n    ProgressbarConfig.decorators = [\n        { type: Injectable },\n    ];\n    return ProgressbarConfig;\n}());\nexport { ProgressbarConfig };\n//# sourceMappingURL=progressbar.config.js.map","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfig } from './progressbar.config';\nvar ProgressbarModule = /** @class */ (function () {\n    function ProgressbarModule() {\n    }\n    ProgressbarModule.forRoot = function () {\n        return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\n    };\n    ProgressbarModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [BarComponent, ProgressbarComponent],\n                    exports: [BarComponent, ProgressbarComponent]\n                },] },\n    ];\n    return ProgressbarModule;\n}());\nexport { ProgressbarModule };\n//# sourceMappingURL=progressbar.module.js.map","export { TooltipContainerComponent } from './tooltip-container.component';\nexport { TooltipDirective } from './tooltip.directive';\nexport { TooltipModule } from './tooltip.module';\nexport { TooltipConfig } from './tooltip.config';\n//# sourceMappingURL=index.js.map","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\nvar TooltipContainerComponent = /** @class */ (function () {\n    function TooltipContainerComponent(config) {\n        Object.assign(this, config);\n    }\n    Object.defineProperty(TooltipContainerComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TooltipContainerComponent.prototype.ngAfterViewInit = function () {\n        this.classMap = { in: false, fade: false };\n        this.classMap[this.placement] = true;\n        this.classMap[\"tooltip-\" + this.placement] = true;\n        this.classMap.in = true;\n        if (this.animation) {\n            this.classMap.fade = true;\n        }\n        if (this.containerClass) {\n            this.classMap[this.containerClass] = true;\n        }\n    };\n    TooltipContainerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'bs-tooltip-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // tslint:disable-next-line\n                    host: {\n                        '[class]': '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n                        '[class.show]': '!isBs3',\n                        role: 'tooltip'\n                    },\n                    styles: [\n                        \"\\n    :host.tooltip {\\n      display: block;\\n    }\\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\\n      left: 50%;\\n      margin-left: -6px;\\n    }\\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\\n      top: 50%;\\n      margin-top: -6px;\\n    }\\n  \"\n                    ],\n                    template: \"\\n    <div class=\\\"tooltip-arrow arrow\\\"></div>\\n    <div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    TooltipContainerComponent.ctorParameters = function () { return [\n        { type: TooltipConfig, },\n    ]; };\n    return TooltipContainerComponent;\n}());\nexport { TooltipContainerComponent };\n//# sourceMappingURL=tooltip-container.component.js.map","import { Injectable } from '@angular/core';\n/** Default values provider for tooltip */\nvar TooltipConfig = /** @class */ (function () {\n    function TooltipConfig() {\n        /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n        this.placement = 'top';\n        /** array of event names which triggers tooltip opening */\n        this.triggers = 'hover focus';\n    }\n    TooltipConfig.decorators = [\n        { type: Injectable },\n    ];\n    return TooltipConfig;\n}());\nexport { TooltipConfig };\n//# sourceMappingURL=tooltip.config.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, EventEmitter, Input, Output, Renderer2, ViewContainerRef } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\nimport { parseTriggers } from '../utils/triggers';\nimport { timer } from 'rxjs';\nvar TooltipDirective = /** @class */ (function () {\n    function TooltipDirective(_viewContainerRef, _renderer, _elementRef, cis, config) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** Fired when tooltip content changes */\n        this.tooltipChange = new EventEmitter();\n        /**\n           * Css class for tooltip container\n           */\n        this.containerClass = '';\n        /** @deprecated - removed, will be added to configuration */\n        this._animation = true;\n        /** @deprecated */\n        this._fadeDuration = 150;\n        /** @deprecated */\n        this.tooltipStateChanged = new EventEmitter();\n        this._tooltip = cis\n            .createLoader(this._elementRef, _viewContainerRef, this._renderer)\n            .provide({ provide: TooltipConfig, useValue: config });\n        Object.assign(this, config);\n        this.onShown = this._tooltip.onShown;\n        this.onHidden = this._tooltip.onHidden;\n    }\n    Object.defineProperty(TooltipDirective.prototype, \"isOpen\", {\n        get: /**\n           * Returns whether or not the tooltip is currently being shown\n           */\n        function () {\n            return this._tooltip.isShown;\n        },\n        set: function (value) {\n            if (value) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"htmlContent\", {\n        set: /** @deprecated - please use `tooltip` instead */\n        function (value) {\n            warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n            this.tooltip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_placement\", {\n        set: /** @deprecated - please use `placement` instead */\n        function (value) {\n            warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n            this.placement = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_isOpen\", {\n        get: function () {\n            warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n            return this.isOpen;\n        },\n        set: /** @deprecated - please use `isOpen` instead*/\n        function (value) {\n            warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n            this.isOpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_enable\", {\n        get: function () {\n            warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n            return this.isDisabled;\n        },\n        set: /** @deprecated - please use `isDisabled` instead */\n        function (value) {\n            warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n            this.isDisabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_appendToBody\", {\n        get: function () {\n            warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n            return this.container === 'body';\n        },\n        set: /** @deprecated - please use `container=\"body\"` instead */\n        function (value) {\n            warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n            this.container = value ? 'body' : this.container;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_popupClass\", {\n        set: /** @deprecated - will replaced with customClass */\n        function (value) {\n            warnOnce('tooltipClass deprecated');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipContext\", {\n        set: /** @deprecated - removed */\n        function (value) {\n            warnOnce('tooltipContext deprecated');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipPopupDelay\", {\n        set: /** @deprecated */\n        function (value) {\n            warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n            this.delay = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipTrigger\", {\n        get: /** @deprecated -  please use `triggers` instead */\n        function () {\n            warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n            return this.triggers;\n        },\n        set: function (value) {\n            warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n            this.triggers = (value || '').toString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TooltipDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this._tooltip.listen({\n            triggers: this.triggers,\n            show: function () { return _this.show(); }\n        });\n        this.tooltipChange.subscribe(function (value) {\n            if (!value) {\n                _this._tooltip.hide();\n            }\n        });\n    };\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    /**\n       * Toggles an element’s tooltip. This is considered a “manual” triggering of\n       * the tooltip.\n       */\n    TooltipDirective.prototype.toggle = /**\n       * Toggles an element’s tooltip. This is considered a “manual” triggering of\n       * the tooltip.\n       */\n    function () {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    };\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    /**\n       * Opens an element’s tooltip. This is considered a “manual” triggering of\n       * the tooltip.\n       */\n    TooltipDirective.prototype.show = /**\n       * Opens an element’s tooltip. This is considered a “manual” triggering of\n       * the tooltip.\n       */\n    function () {\n        var _this = this;\n        if (this.isOpen ||\n            this.isDisabled ||\n            this._delayTimeoutId ||\n            !this.tooltip) {\n            return;\n        }\n        var showTooltip = function () {\n            if (_this._delayTimeoutId) {\n                _this._delayTimeoutId = undefined;\n            }\n            _this._tooltip\n                .attach(TooltipContainerComponent)\n                .to(_this.container)\n                .position({ attachment: _this.placement })\n                .show({\n                content: _this.tooltip,\n                placement: _this.placement,\n                containerClass: _this.containerClass\n            });\n        };\n        var cancelDelayedTooltipShowing = function () {\n            if (_this._tooltipCancelShowFn) {\n                _this._tooltipCancelShowFn();\n            }\n        };\n        if (this.delay) {\n            var _timer_1 = timer(this.delay).subscribe(function () {\n                showTooltip();\n                cancelDelayedTooltipShowing();\n            });\n            if (this.triggers) {\n                var triggers = parseTriggers(this.triggers);\n                this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, function () {\n                    _timer_1.unsubscribe();\n                    cancelDelayedTooltipShowing();\n                });\n            }\n        }\n        else {\n            showTooltip();\n        }\n    };\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    /**\n       * Closes an element’s tooltip. This is considered a “manual” triggering of\n       * the tooltip.\n       */\n    TooltipDirective.prototype.hide = /**\n       * Closes an element’s tooltip. This is considered a “manual” triggering of\n       * the tooltip.\n       */\n    function () {\n        var _this = this;\n        if (this._delayTimeoutId) {\n            clearTimeout(this._delayTimeoutId);\n            this._delayTimeoutId = undefined;\n        }\n        if (!this._tooltip.isShown) {\n            return;\n        }\n        this._tooltip.instance.classMap.in = false;\n        setTimeout(function () {\n            _this._tooltip.hide();\n        }, this._fadeDuration);\n    };\n    TooltipDirective.prototype.ngOnDestroy = function () {\n        this._tooltip.dispose();\n    };\n    TooltipDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tooltip], [tooltipHtml]',\n                    exportAs: 'bs-tooltip'\n                },] },\n    ];\n    /** @nocollapse */\n    TooltipDirective.ctorParameters = function () { return [\n        { type: ViewContainerRef, },\n        { type: Renderer2, },\n        { type: ElementRef, },\n        { type: ComponentLoaderFactory, },\n        { type: TooltipConfig, },\n    ]; };\n    TooltipDirective.propDecorators = {\n        \"tooltip\": [{ type: Input },],\n        \"tooltipChange\": [{ type: Output },],\n        \"placement\": [{ type: Input },],\n        \"triggers\": [{ type: Input },],\n        \"container\": [{ type: Input },],\n        \"isOpen\": [{ type: Input },],\n        \"isDisabled\": [{ type: Input },],\n        \"containerClass\": [{ type: Input },],\n        \"delay\": [{ type: Input },],\n        \"onShown\": [{ type: Output },],\n        \"onHidden\": [{ type: Output },],\n        \"htmlContent\": [{ type: Input, args: ['tooltipHtml',] },],\n        \"_placement\": [{ type: Input, args: ['tooltipPlacement',] },],\n        \"_isOpen\": [{ type: Input, args: ['tooltipIsOpen',] },],\n        \"_enable\": [{ type: Input, args: ['tooltipEnable',] },],\n        \"_appendToBody\": [{ type: Input, args: ['tooltipAppendToBody',] },],\n        \"_animation\": [{ type: Input, args: ['tooltipAnimation',] },],\n        \"_popupClass\": [{ type: Input, args: ['tooltipClass',] },],\n        \"_tooltipContext\": [{ type: Input, args: ['tooltipContext',] },],\n        \"_tooltipPopupDelay\": [{ type: Input, args: ['tooltipPopupDelay',] },],\n        \"_fadeDuration\": [{ type: Input, args: ['tooltipFadeDuration',] },],\n        \"_tooltipTrigger\": [{ type: Input, args: ['tooltipTrigger',] },],\n        \"tooltipStateChanged\": [{ type: Output },],\n    };\n    __decorate([\n        OnChange(),\n        __metadata(\"design:type\", Object)\n    ], TooltipDirective.prototype, \"tooltip\", void 0);\n    return TooltipDirective;\n}());\nexport { TooltipDirective };\n//# sourceMappingURL=tooltip.directive.js.map","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\nvar TooltipModule = /** @class */ (function () {\n    function TooltipModule() {\n    }\n    TooltipModule.forRoot = function () {\n        return {\n            ngModule: TooltipModule,\n            providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n        };\n    };\n    TooltipModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [TooltipDirective, TooltipContainerComponent],\n                    exports: [TooltipDirective],\n                    entryComponents: [TooltipContainerComponent]\n                },] },\n    ];\n    return TooltipModule;\n}());\nexport { TooltipModule };\n//# sourceMappingURL=tooltip.module.js.map","export { OnChange } from './decorators';\nexport { LinkedList } from './linked-list.class';\nexport { isBs3 } from './theme-provider';\nexport { Trigger } from './trigger.class';\nexport { Utils } from './utils.class';\nexport { setTheme } from './theme-provider';\n//# sourceMappingURL=index.js.map","var LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this.length = 0;\n        this.asArray = [];\n    }\n    LinkedList.prototype.get = function (position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            return void 0;\n        }\n        var current = this.head;\n        for (var index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current.value;\n    };\n    LinkedList.prototype.add = function (value, position) {\n        if (position === void 0) { position = this.length; }\n        if (position < 0 || position > this.length) {\n            throw new Error('Position is out of the list');\n        }\n        var node = {\n            value: value,\n            next: undefined,\n            previous: undefined\n        };\n        if (this.length === 0) {\n            this.head = node;\n            this.tail = node;\n            this.current = node;\n        }\n        else {\n            if (position === 0) {\n                // first node\n                node.next = this.head;\n                this.head.previous = node;\n                this.head = node;\n            }\n            else if (position === this.length) {\n                // last node\n                this.tail.next = node;\n                node.previous = this.tail;\n                this.tail = node;\n            }\n            else {\n                // node in middle\n                var currentPreviousNode = this.getNode(position - 1);\n                var currentNextNode = currentPreviousNode.next;\n                currentPreviousNode.next = node;\n                currentNextNode.previous = node;\n                node.previous = currentPreviousNode;\n                node.next = currentNextNode;\n            }\n        }\n        this.length++;\n        this.createInternalArrayRepresentation();\n    };\n    LinkedList.prototype.remove = function (position) {\n        if (position === void 0) { position = 0; }\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        if (position === 0) {\n            // first node\n            this.head = this.head.next;\n            if (this.head) {\n                // there is no second node\n                this.head.previous = undefined;\n            }\n            else {\n                // there is no second node\n                this.tail = undefined;\n            }\n        }\n        else if (position === this.length - 1) {\n            // last node\n            this.tail = this.tail.previous;\n            this.tail.next = undefined;\n        }\n        else {\n            // middle node\n            var removedNode = this.getNode(position);\n            removedNode.next.previous = removedNode.previous;\n            removedNode.previous.next = removedNode.next;\n        }\n        this.length--;\n        this.createInternalArrayRepresentation();\n    };\n    LinkedList.prototype.set = function (position, value) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        var node = this.getNode(position);\n        node.value = value;\n        this.createInternalArrayRepresentation();\n    };\n    LinkedList.prototype.toArray = function () {\n        return this.asArray;\n    };\n    LinkedList.prototype.findAll = function (fn) {\n        var current = this.head;\n        var result = [];\n        for (var index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result.push({ index: index, value: current.value });\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    // Array methods overriding start\n    // Array methods overriding start\n    LinkedList.prototype.push = \n    // Array methods overriding start\n    function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        args.forEach(function (arg) {\n            _this.add(arg);\n        });\n        return this.length;\n    };\n    LinkedList.prototype.pop = function () {\n        if (this.length === 0) {\n            return undefined;\n        }\n        var last = this.tail;\n        this.remove(this.length - 1);\n        return last.value;\n    };\n    LinkedList.prototype.unshift = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        args.reverse();\n        args.forEach(function (arg) {\n            _this.add(arg, 0);\n        });\n        return this.length;\n    };\n    LinkedList.prototype.shift = function () {\n        if (this.length === 0) {\n            return undefined;\n        }\n        var lastItem = this.head.value;\n        this.remove();\n        return lastItem;\n    };\n    LinkedList.prototype.forEach = function (fn) {\n        var current = this.head;\n        for (var index = 0; index < this.length; index++) {\n            fn(current.value, index);\n            current = current.next;\n        }\n    };\n    LinkedList.prototype.indexOf = function (value) {\n        var current = this.head;\n        var position = 0;\n        for (var index = 0; index < this.length; index++) {\n            if (current.value === value) {\n                position = index;\n                break;\n            }\n            current = current.next;\n        }\n        return position;\n    };\n    LinkedList.prototype.some = function (fn) {\n        var current = this.head;\n        var result = false;\n        while (current && !result) {\n            if (fn(current.value)) {\n                result = true;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.every = function (fn) {\n        var current = this.head;\n        var result = true;\n        while (current && result) {\n            if (!fn(current.value)) {\n                result = false;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.toString = function () {\n        return '[Linked List]';\n    };\n    LinkedList.prototype.find = function (fn) {\n        var current = this.head;\n        var result;\n        for (var index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = current.value;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.findIndex = function (fn) {\n        var current = this.head;\n        var result;\n        for (var index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = index;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedList.prototype.getNode = function (position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        var current = this.head;\n        for (var index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current;\n    };\n    LinkedList.prototype.createInternalArrayRepresentation = function () {\n        var outArray = [];\n        var current = this.head;\n        while (current) {\n            outArray.push(current.value);\n            current = current.next;\n        }\n        this.asArray = outArray;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n//# sourceMappingURL=linked-list.class.js.map","import { isDevMode } from '@angular/core';\nvar _messagesHash = {};\nvar _hideMsg = typeof console === 'undefined' || !('warn' in console);\nexport function warnOnce(msg) {\n    if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n        return;\n    }\n    _messagesHash[msg] = true;\n    /*tslint:disable-next-line*/\n    console.warn(msg);\n}\n//# sourceMappingURL=warn-once.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CardsComponent } from './cards.component';\nimport { FormsComponent } from './forms.component';\nimport { SwitchesComponent } from './switches.component';\nimport { TablesComponent } from './tables.component';\nimport { TabsComponent } from './tabs.component';\nimport { CarouselsComponent } from './carousels.component';\nimport { CollapsesComponent } from './collapses.component';\nimport { PaginationsComponent } from './paginations.component';\nimport {PopoversComponent} from './popovers.component';\nimport {ProgressComponent} from './progress.component';\nimport {TooltipsComponent} from './tooltips.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Base'\n    },\n    children: [\n      {\n        path: 'cards',\n        component: CardsComponent,\n        data: {\n          title: 'Cards'\n        }\n      },\n      {\n        path: 'forms',\n        component: FormsComponent,\n        data: {\n          title: 'Forms'\n        }\n      },\n      {\n        path: 'switches',\n        component: SwitchesComponent,\n        data: {\n          title: 'Switches'\n        }\n      },\n      {\n        path: 'tables',\n        component: TablesComponent,\n        data: {\n          title: 'Tables'\n        }\n      },\n      {\n        path: 'tabs',\n        component: TabsComponent,\n        data: {\n          title: 'Tabs'\n        }\n      },\n      {\n        path: 'carousels',\n        component: CarouselsComponent,\n        data: {\n          title: 'Carousels'\n        }\n      },\n      {\n        path: 'collapses',\n        component: CollapsesComponent,\n        data: {\n          title: 'Collapses'\n        }\n      },\n      {\n        path: 'paginations',\n        component: PaginationsComponent,\n        data: {\n          title: 'Pagination'\n        }\n      },\n      {\n        path: 'popovers',\n        component: PopoversComponent,\n        data: {\n          title: 'Popover'\n        }\n      },\n      {\n        path: 'progress',\n        component: ProgressComponent,\n        data: {\n          title: 'Progress'\n        }\n      },\n      {\n        path: 'tooltips',\n        component: TooltipsComponent,\n        data: {\n          title: 'Tooltips'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BaseRoutingModule {}\n","// Angular\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CardsComponent } from './cards.component';\r\n\r\n// Forms Component\r\nimport { FormsComponent } from './forms.component';\r\n\r\nimport { SwitchesComponent } from './switches.component';\r\nimport { TablesComponent } from './tables.component';\r\n\r\n// Tabs Component\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { TabsComponent } from './tabs.component';\r\n\r\n// Carousel Component\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { CarouselsComponent } from './carousels.component';\r\n\r\n// Collapse Component\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { CollapsesComponent } from './collapses.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n\r\n// Pagination Component\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { PopoversComponent } from './popovers.component';\r\n\r\n// Popover Component\r\nimport { PopoverModule } from 'ngx-bootstrap/popover';\r\nimport { PaginationsComponent } from './paginations.component';\r\n\r\n// Progress Component\r\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\r\nimport { ProgressComponent } from './progress.component';\r\n\r\n// Tooltip Component\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { TooltipsComponent } from './tooltips.component';\r\n\r\n\r\n// Components Routing\r\nimport { BaseRoutingModule } from './base-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    BaseRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    TabsModule,\r\n    CarouselModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    PopoverModule.forRoot(),\r\n    ProgressbarModule.forRoot(),\r\n    TooltipModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    CardsComponent,\r\n    FormsComponent,\r\n    SwitchesComponent,\r\n    TablesComponent,\r\n    TabsComponent,\r\n    CarouselsComponent,\r\n    CollapsesComponent,\r\n    PaginationsComponent,\r\n    PopoversComponent,\r\n    ProgressComponent,\r\n    TooltipsComponent\r\n  ]\r\n})\r\nexport class BaseModule { }\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card title\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">Card footer</div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-check\\\"></i>Card with icon\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with switch\\r\\n          <label class=\\\"switch switch-sm switch-text switch-info float-right mb-0\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\">\\r\\n            <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span>\\r\\n            <span class=\\\"switch-handle\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with label\\r\\n          <span class=\\\"badge badge-success float-right\\\">Success</span>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with label\\r\\n          <span class=\\\"badge badge-pill badge-danger float-right\\\">42</span>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n  </div><!--/.row-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card border-primary\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card border-secondary\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card border-success\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card border-info\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card border-warning\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card border-danger\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n  </div><!--/.row-->\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card card-accent-primary\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with accent\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card card-accent-secondary\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with accent\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card card-accent-success\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with accent\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card card-accent-info\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with accent\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card card-accent-warning\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with accent\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card card-accent-danger\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card with accent\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n  </div><!--/.row-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-primary text-center\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <blockquote class=\\\"card-bodyquote\\\">\\r\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\\r\\n            <footer>Someone famous in\\r\\n              <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-success text-center\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <blockquote class=\\\"card-bodyquote\\\">\\r\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\\r\\n            <footer>Someone famous in\\r\\n              <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-info text-center\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <blockquote class=\\\"card-bodyquote\\\">\\r\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\\r\\n            <footer>Someone famous in\\r\\n              <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-warning text-center\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <blockquote class=\\\"card-bodyquote\\\">\\r\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\\r\\n            <footer>Someone famous in\\r\\n              <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-danger text-center\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <blockquote class=\\\"card-bodyquote\\\">\\r\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\\r\\n            <footer>Someone famous in\\r\\n              <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-primary text-center\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <blockquote class=\\\"card-bodyquote\\\">\\r\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\\r\\n            <footer>Someone famous in\\r\\n              <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n  </div><!--/.row-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-primary\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card title\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-success\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card title\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-info\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card title\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-warning\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card title\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n      <div class=\\\"card text-white bg-danger\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Card title\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n  </div><!--/.row-->\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'cards.component.html'\r\n})\r\nexport class CardsComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Bootstrap Carousel\\r\\n          <div class=\\\"card-header-actions\\\">\\r\\n            <a href=\\\"https://valor-software.com/ngx-bootstrap/#/carousel\\\" target=\\\"_blank\\\">\\r\\n              <small className=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel [interval]=\\\"3000\\\">\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/technics/2/\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/technics/4/\\\" alt=\\\"Second slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/technics/6/\\\" alt=\\\"Third slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n            </slide>\\r\\n          </carousel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Carousel\\r\\n          <small> optional captions</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel [interval]=\\\"4500\\\">\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/nature/2/\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>First slide label</h3>\\r\\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/nature/4/\\\" alt=\\\"Second slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Second slide label</h3>\\r\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/nature/6/\\\" alt=\\\"Third slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Third slide label</h3>\\r\\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n          </carousel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Carousel\\r\\n          <small> configuring defaults</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel>\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/city/2/\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>First slide label</h3>\\r\\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/city/4/\\\" alt=\\\"Second slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Second slide label</h3>\\r\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://lorempixel.com/900/500/city/6/\\\" alt=\\\"Third slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Third slide label</h3>\\r\\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n          </carousel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Carousel\\r\\n          <small> dynamic slides</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel [interval]=\\\"myInterval\\\" [noWrap]=\\\"noWrapSlides\\\" [(activeSlide)]=\\\"activeSlideIndex\\\">\\r\\n            <slide *ngFor=\\\"let slide of slides; let index=index\\\">\\r\\n              <img [src]=\\\"slide.image\\\" alt=\\\"image slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n\\r\\n              <div class=\\\"carousel-caption\\\">\\r\\n                <h4>Slide {{index}}</h4>\\r\\n                <p>{{slide.text}}</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n          </carousel>\\r\\n          <br/>\\r\\n          <div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"addSlide()\\\">Add Slide\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"removeSlide()\\\">Remove Current\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"removeSlide(2)\\\">Remove #3\\r\\n            </button>\\r\\n          </div>\\r\\n          <div>\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label><input type=\\\"checkbox\\\" [(ngModel)]=\\\"noWrapSlides\\\">Disable Slide Looping</label>\\r\\n            </div>\\r\\n\\r\\n            <span>Interval, in milliseconds (Enter a negative number or 0 to stop the interval.): </span>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"myInterval\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { CarouselConfig } from 'ngx-bootstrap/carousel';\r\n\r\n@Component({\r\n  templateUrl: 'carousels.component.html',   providers: [\r\n    { provide: CarouselConfig, useValue: { interval: 1500, noPause: true } }\r\n  ]\r\n})\r\nexport class CarouselsComponent {\r\n\r\n  myInterval: number = 6000;\r\n  slides: any[] = [];\r\n  activeSlideIndex: number = 0;\r\n  noWrapSlides: boolean = false;\r\n\r\n  constructor() {\r\n    for (let i = 0; i < 4; i++) {\r\n      this.addSlide();\r\n    }\r\n  }\r\n\r\n  addSlide(): void {\r\n    this.slides.push({\r\n      image: `https://lorempixel.com/900/500/sports/${this.slides.length % 8 + 1}/`\r\n    });\r\n  }\r\n\r\n  removeSlide(index?: number): void {\r\n    const toRemove = index ? index : this.activeSlideIndex;\r\n    this.slides.splice(toRemove, 1);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Bootstrap Collapse\\r\\n      <div class=\\\"card-header-actions\\\">\\r\\n        <a href=\\\"https://valor-software.com/ngx-bootstrap/#/collapse\\\" target=\\\"_blank\\\">\\r\\n          <small className=\\\"text-muted\\\">docs</small>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\"\\r\\n         (collapsed)=\\\"collapsed($event)\\\"\\r\\n         (expanded)=\\\"expanded($event)\\\"\\r\\n         [collapse]=\\\"isCollapsed\\\">\\r\\n      <p>\\r\\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo\\r\\n        consequat.\\r\\n      </p>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n              (click)=\\\"isCollapsed = !isCollapsed\\\">Toggle collapse\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'collapses.component.html'\r\n})\r\nexport class CollapsesComponent {\r\n\r\n  constructor() { }\r\n\r\n  isCollapsed: boolean = false;\r\n\r\n  collapsed(event: any): void {\r\n    // console.log(event);\r\n  }\r\n\r\n  expanded(event: any): void {\r\n    // console.log(event);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header text-center\\\">\\n          <b> Robbin</b>\\n        </div>\\n\\n\\n        <div class=\\\"card-body\\\">\\n          <form action=\\\"\\\" method=\\\"post\\\" class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" id=\\\"input1-group1\\\" name=\\\"input1-group1\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-key\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" id=\\\"input1-group2\\\" name=\\\"input1-group2\\\" class=\\\"form-control\\\" placeholder=\\\"Mot de passe\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" id=\\\"input1-group3\\\" name=\\\"input1-group3\\\" class=\\\"form-control\\\" placeholder=\\\"Date de naissance\\\">\\n                </div>\\n              </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n\\n              <div class=\\\"col-md-9 col-form-label\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input class=\\\"form-check-input\\\" id=\\\"check1\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"check1\\\">J'accepte les CG Robbin</label>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary btn-block\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Créer mon compte</button>\\n\\n\\n\\n          </form>\\n        </div>\\n\\n      </div>\\n\\n    </div><!--/.col-->\\n  </div><!--/.row-->\\n\\n</div>\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'forms.component.html'\r\n})\r\nexport class FormsComponent {\r\n\r\n  constructor() { }\r\n\r\n  isCollapsed: boolean = false;\r\n  iconCollapse: string = \"icon-arrow-up\";\r\n\r\n  collapsed(event: any): void {\r\n    // console.log(event);\r\n  }\r\n\r\n  expanded(event: any): void {\r\n    // console.log(event);\r\n  }\r\n\r\n  toggleCollapse(): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n    this.iconCollapse = this.isCollapsed ? \"icon-arrow-down\" : \"icon-arrow-up\";\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Bootstrap Pagination\\r\\n      <div class=\\\"card-header-actions\\\">\\r\\n        <a href=\\\"https://valor-software.com/ngx-bootstrap/#/pagination\\\" target=\\\"_blank\\\">\\r\\n          <small className=\\\"text-muted\\\">docs</small>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-12 d-sm-down-none\\\">\\r\\n          <pagination [totalItems]=\\\"totalItems\\\" [(ngModel)]=\\\"currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\"></pagination>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-12\\\">\\r\\n          <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"totalItems\\\" [(ngModel)]=\\\"currentPage\\\" class=\\\"pagination-sm\\\" [maxSize]=\\\"6\\\"\\r\\n                      previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"></pagination>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-12 d-sm-down-none\\\">\\r\\n          <pagination [directionLinks]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"totalItems\\\"\\r\\n                      [(ngModel)]=\\\"currentPage\\\"></pagination>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-12\\\">\\r\\n          <pagination [directionLinks]=\\\"false\\\" [totalItems]=\\\"totalItems\\\" [(ngModel)]=\\\"currentPage\\\"\\r\\n                      (numPages)=\\\"smallnumPages = $event\\\"></pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <pre class=\\\"card card-body card-header mb-3\\\">The selected page no: {{currentPage}}/{{smallnumPages}}</pre>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"setPage(3)\\\">Set current page to: 3</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Pagination <small>states & limits</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-12\\\">\\r\\n          <pagination [totalItems]=\\\"bigTotalItems\\\" [(ngModel)]=\\\"bigCurrentPage\\\" [maxSize]=\\\"maxSize\\\" class=\\\"pagination-sm\\\"\\r\\n                      previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" [boundaryLinks]=\\\"true\\\"></pagination>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-12\\\">\\r\\n          <pagination [totalItems]=\\\"bigTotalItems\\\" [(ngModel)]=\\\"bigCurrentPage\\\" [maxSize]=\\\"maxSize\\\" class=\\\"pagination-sm\\\"\\r\\n                      previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\r\\n                      [boundaryLinks]=\\\"true\\\" [rotate]=\\\"false\\\" (numPages)=\\\"numPages = $event\\\"></pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <pre class=\\\"card card-body card-header\\\">Page: {{bigCurrentPage}} / {{numPages}}</pre>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Pager\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-12 col-md-6\\\">\\r\\n          <pagination\\r\\n            [directionLinks]=\\\"false\\\"\\r\\n            [totalItems]=\\\"totalItems\\\"\\r\\n            [(ngModel)]=\\\"currentPager\\\"\\r\\n            (numPages)=\\\"smallnumPages = $event\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-12 col-md-6\\\">\\r\\n          <pager\\r\\n            [totalItems]=\\\"totalItems\\\"\\r\\n            [(ngModel)]=\\\"currentPager\\\"\\r\\n            (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n            pageBtnClass=\\\"btn\\\"\\r\\n            [itemsPerPage]=\\\"10\\\"\\r\\n            class=\\\"pull-left\\\">\\r\\n          </pager>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Input, ViewEncapsulation  } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'paginations.component.html',\r\n  styles: ['.pager li.btn:active { box-shadow: none; }'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PaginationsComponent {\r\n\r\n  constructor() { }\r\n\r\n  totalItems: number = 64;\r\n  currentPage: number   = 4;\r\n  smallnumPages: number = 0;\r\n\r\n  setPage(pageNo: number): void {\r\n    this.currentPage = pageNo;\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    console.log('Page changed to: ' + event.page);\r\n    console.log('Number items per page: ' + event.itemsPerPage);\r\n  }\r\n\r\n  maxSize: number = 5;\r\n  bigTotalItems: number = 675;\r\n  bigCurrentPage: number = 1;\r\n  numPages: number = 0;\r\n\r\n  currentPager: number   = 4;\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Bootstrap Popover\\r\\n      <div class=\\\"card-header-actions\\\">\\r\\n        <a href=\\\"https://valor-software.com/ngx-bootstrap/#/popover\\\" target=\\\"_blank\\\">\\r\\n          <small className=\\\"text-muted\\\">docs</small>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n              popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\">\\r\\n        Live demo\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Popover\\r\\n      <small>positioning</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              popoverTitle=\\\"Popover on top\\\"\\r\\n              placement=\\\"top\\\">\\r\\n        Popover on top\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              popoverTitle=\\\"Popover on right\\\"\\r\\n              placement=\\\"right\\\">\\r\\n        Popover on right\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              popoverTitle=\\\"Popover auto\\\"\\r\\n              placement=\\\"auto\\\">\\r\\n        Popover auto\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              popoverTitle=\\\"Popover on left\\\"\\r\\n              placement=\\\"left\\\">\\r\\n        Popover on left\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              popoverTitle=\\\"Popover on bottom\\\"\\r\\n              placement=\\\"bottom\\\">\\r\\n        Popover on bottom\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Popover\\r\\n      <small><code>focus</code> trigger</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n              popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              popoverTitle=\\\"Dismissible popover\\\"\\r\\n              triggers=\\\"focus\\\">\\r\\n        Dismissible popover\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Popover\\r\\n      <small>dynamic content</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n              [popover]=\\\"content\\\" [popoverTitle]=\\\"title\\\">\\r\\n        Simple binding\\r\\n      </button>\\r\\n\\r\\n      <ng-template #popTemplate>Just another: {{content}}</ng-template>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\"\\r\\n              [popover]=\\\"popTemplate\\\" popoverTitle=\\\"Template ref content inside\\\">\\r\\n        TemplateRef binding\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Popover\\r\\n      <small>dynamic HTML</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <ng-template #popTemplateHtml>Here we go:\\r\\n        <div [innerHtml]=\\\"html\\\"></div>\\r\\n      </ng-template>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n              [popover]=\\\"popTemplateHtml\\\" popoverTitle=\\\"Dynamic html inside\\\">\\r\\n        Show me popover with html\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Popover\\r\\n      <small>append to <code>body</code></small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row panel\\\" style=\\\"position: relative; overflow: hidden;\\\">\\r\\n        <div class=\\\"card-body panel-body\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"\\r\\n                  popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\">\\r\\n            Default popover\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n                  popover=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n                  container=\\\"body\\\">\\r\\n            Popover appended to body\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Popover\\r\\n      <small>custom triggers</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n              popover=\\\"I will hide on blur\\\"\\r\\n              triggers=\\\"mouseenter:mouseleave\\\">\\r\\n        Hover over me!\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Popover\\r\\n      <small>manual triggering</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <p>\\r\\n        <span popover=\\\"Hello there! I was triggered manually\\\"\\r\\n              triggers=\\\"\\\" #pop=\\\"bs-popover\\\">\\r\\n        This text has attached popover\\r\\n        </span>\\r\\n      </p>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"pop.show()\\\">\\r\\n        Show\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"pop.hide()\\\">\\r\\n        Hide\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, SecurityContext} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n\r\n@Component({\r\n  templateUrl: 'popovers.component.html'\r\n})\r\nexport class PopoversComponent {\r\n\r\n  constructor(sanitizer: DomSanitizer) {\r\n    this.html = sanitizer.sanitize(SecurityContext.HTML, this.html)\r\n  }\r\n\r\n  title: string = 'Welcome word';\r\n  content: string = 'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.';\r\n  html: string = `<span class=\"btn btn-warning\">Never trust not sanitized <code>HTML</code>!!!</span>`;\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Bootstrap Progress\\r\\n      <div class=\\\"card-header-actions\\\">\\r\\n        <a href=\\\"https://valor-software.com/ngx-bootstrap/#/progressbar\\\" target=\\\"_blank\\\">\\r\\n          <small className=\\\"text-muted\\\">docs</small>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <progressbar class=\\\"progress\\\" [value]=\\\"55\\\" [max]=\\\"100\\\"></progressbar>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <progressbar class=\\\"progress progress-striped\\\" [value]=\\\"22\\\" [max]=\\\"100\\\" type=\\\"warning\\\">22%</progressbar>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <progressbar class=\\\"progress progress-striped active\\\" [max]=\\\"200\\\" [value]=\\\"166\\\" type=\\\"danger\\\"><i>166 / 200</i></progressbar>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Progress <small>dynamic</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <progressbar class=\\\"progress progress-striped progress-animated\\\" [max]=\\\"max\\\" [value]=\\\"dynamic\\\">\\r\\n        <span style=\\\"color:white; white-space:nowrap;\\\">{{dynamic}} / {{max}}</span>\\r\\n      </progressbar>\\r\\n\\r\\n      <small><em>No animation</em></small>\\r\\n      <progressbar class=\\\"progress progress-success\\\" [value]=\\\"dynamic\\\" [max]=\\\"100\\\" type=\\\"success\\\"><b>{{dynamic}}%</b></progressbar>\\r\\n\\r\\n      <small><em>Object (changes type based on value)</em></small>\\r\\n      <progressbar class=\\\"progress-bar progress-bar-striped progress-bar-animated\\\" [value]=\\\"dynamic\\\" [max]=\\\"max\\\" [type]=\\\"type\\\">\\r\\n        {{type}} <i *ngIf=\\\"showWarning\\\">!!! Watch out !!!</i>\\r\\n      </progressbar>\\r\\n      <br>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"random()\\\">Randomize</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Progress <small>stacked</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row col-lg-12\\\">\\r\\n        <progressbar class=\\\"progress\\\" [value]=\\\"stacked\\\" [max]=\\\"100\\\"></progressbar>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row col-md-12\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"randomize()\\\">{{buttonCaption}} randomize</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnDestroy} from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'progress.component.html'\r\n})\r\nexport class ProgressComponent implements OnDestroy {\r\n\r\n  max: number = 200;\r\n  showWarning: boolean;\r\n  dynamic: number;\r\n  type: string;\r\n\r\n  constructor() {\r\n    this.random();\r\n    this.randomStacked()\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    }\r\n    // console.log(`onDestroy`, this.timer);\r\n  }\r\n\r\n  random(): void {\r\n    let value = Math.floor(Math.random() * 100 + 1);\r\n    let type: string;\r\n\r\n    if (value < 25) {\r\n      type = 'success';\r\n    } else if (value < 50) {\r\n      type = 'info';\r\n    } else if (value < 75) {\r\n      type = 'warning';\r\n    } else {\r\n      type = 'danger';\r\n    }\r\n\r\n    this.showWarning = type === 'danger' || type === 'warning';\r\n    this.dynamic = value;\r\n    this.type = type;\r\n\r\n  }\r\n\r\n  stacked: any[] = [];\r\n\r\n  randomStacked(): void {\r\n    let types = ['success', 'info', 'warning', 'danger'];\r\n\r\n    this.stacked = [];\r\n    let n = Math.floor(Math.random() * 4 + 1);\r\n    for (let i = 0; i < n; i++) {\r\n      let index = Math.floor(Math.random() * 4);\r\n      let value = Math.floor(Math.random() * 27 + 3);\r\n      this.stacked.push({\r\n        value,\r\n        type: types[index],\r\n        label: value + ' %'\r\n      });\r\n    }\r\n  }\r\n\r\n  timer: any = null;\r\n  buttonCaption: string = 'Start';\r\n\r\n  randomize(): void {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    } else {\r\n      this.timer = setInterval(() => this.randomStacked(), 2000);\r\n    }\r\n    this.buttonCaption = this.timer ? 'Stop' : 'Start';\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          3d Switch\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-3d switch-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-3d switch-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-3d switch-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-3d switch-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-3d switch-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-3d switch-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch default\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch default - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-pill switch-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-outline-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch outline - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-pill switch-outline-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch outline alternative\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-outline-primary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-secondary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-success-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-warning-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-info-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-outline-danger-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch outline alternative - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-pill switch-outline-primary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-secondary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-success-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-warning-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-info-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-pill switch-outline-danger-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with text\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with text - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-pill switch-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with text outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <label class=\\\"switch switch-label switch-outline-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with text outline - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with text outline alternative\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-outline-primary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-secondary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-success-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-warning-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-info-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-danger-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with text outline alternative - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-primary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-secondary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-success-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-warning-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-info-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-danger-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with icon\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with icon - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-pill switch-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with icon outline\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-outline-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with icon outline - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-primary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-secondary\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-success\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-warning\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-info\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-danger\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with icon outline alternative\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-outline-primary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-secondary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-success-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-warning-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-info-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-outline-danger-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Switch with icon outline alternative - pills\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-primary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-secondary-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-success-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-warning-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-info-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n          <label class=\\\"switch switch-label switch-pill switch-outline-danger-alt\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n            <span class=\\\"switch-slider\\\" data-checked=\\\"&#x2713;\\\" data-unchecked=\\\"&#x2715;\\\"></span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Sizes\\r\\n        </div>\\r\\n        <div class=\\\"card-body p-0\\\">\\r\\n          <table class=\\\"table table-hover table-striped table-align-middle mb-0\\\">\\r\\n            <thead>\\r\\n              <th>Size</th>\\r\\n              <th>Example</th>\\r\\n              <th>CSS Class</th>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  Large\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label class=\\\"switch switch-lg switch-3d switch-primary\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n                    <span class=\\\"switch-slider\\\"></span>\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  Add following class <code>.switch-lg</code>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  Normal\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label class=\\\"switch switch-3d switch-primary\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n                    <span class=\\\"switch-slider\\\"></span>\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  -\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  Small\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label class=\\\"switch switch-sm switch-3d switch-primary\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\r\\n                    <span class=\\\"switch-slider\\\"></span>\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  Add following class <code>.switch-sm</code>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--/.col-->\\r\\n  </div><!--/.row-->\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'switches.component.html'\r\n})\r\nexport class SwitchesComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Simple Table\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Date registered</th>\\r\\n                <th>Role</th>\\r\\n                <th>Status</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>Samppa Nori</td>\\r\\n                <td>2012/01/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Estavan Lykos</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Chetan Mohamed</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Admin</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Derick Maximinus</td>\\r\\n                <td>2012/03/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Friderik Dávid</td>\\r\\n                <td>2012/01/21</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <ul class=\\\"pagination\\\">\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\r\\n            <li class=\\\"page-item active\\\">\\r\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\r\\n            </li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Striped Table\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Date registered</th>\\r\\n                <th>Role</th>\\r\\n                <th>Status</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>Yiorgos Avraamu</td>\\r\\n                <td>2012/01/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Avram Tarasios</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Quintin Ed</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Admin</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Enéas Kwadwo</td>\\r\\n                <td>2012/03/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Agapetus Tadeáš</td>\\r\\n                <td>2012/01/21</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <ul class=\\\"pagination\\\">\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\r\\n            <li class=\\\"page-item active\\\">\\r\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\r\\n            </li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/.row-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Condensed Table\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Date registered</th>\\r\\n                <th>Role</th>\\r\\n                <th>Status</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>Carwyn Fachtna</td>\\r\\n                <td>2012/01/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Nehemiah Tatius</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Ebbe Gemariah</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Admin</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Eustorgios Amulius</td>\\r\\n                <td>2012/03/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Leopold Gáspár</td>\\r\\n                <td>2012/01/21</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <ul class=\\\"pagination\\\">\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\r\\n            <li class=\\\"page-item active\\\">\\r\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\r\\n            </li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Bordered Table\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Date registered</th>\\r\\n                <th>Role</th>\\r\\n                <th>Status</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>Pompeius René</td>\\r\\n                <td>2012/01/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Paĉjo Jadon</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Micheal Mercurius</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Admin</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Ganesha Dubhghall</td>\\r\\n                <td>2012/03/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Hiroto Šimun</td>\\r\\n                <td>2012/01/21</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <ul class=\\\"pagination\\\">\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\r\\n            <li class=\\\"page-item active\\\">\\r\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\r\\n            </li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\r\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/.row-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Combined All Table\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Date registered</th>\\r\\n                <th>Role</th>\\r\\n                <th>Status</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>Vishnu Serghei</td>\\r\\n                <td>2012/01/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Zbyněk Phoibos</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Einar Randall</td>\\r\\n                <td>2012/02/01</td>\\r\\n                <td>Admin</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Félix Troels</td>\\r\\n                <td>2012/03/01</td>\\r\\n                <td>Member</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Aulus Agmundr</td>\\r\\n                <td>2012/01/21</td>\\r\\n                <td>Staff</td>\\r\\n                <td>\\r\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <nav>\\r\\n            <ul class=\\\"pagination\\\">\\r\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\r\\n              <li class=\\\"page-item active\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\r\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\r\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\r\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/.row-->\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'tables.component.html'\r\n})\r\nexport class TablesComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 mb-4\\\">\\r\\n      <!-- Nav tabs -->\\r\\n      <tabset>\\r\\n        <tab heading=\\\"Home\\\">\\r\\n          1. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab heading=\\\"Profile\\\">\\r\\n          2. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab heading=\\\"Messages\\\">\\r\\n          3. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6 mb-4\\\">\\r\\n      <!-- Nav tabs -->\\r\\n      <tabset>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-calculator\\\"></i></ng-template>\\r\\n          2. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-basket-loaded\\\"></i></ng-template>\\r\\n          3. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-pie-chart\\\"></i></ng-template>\\r\\n          4. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6 mb-4\\\">\\r\\n      <!-- Nav tabs -->\\r\\n      <tabset>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-calculator\\\"></i> Calculator</ng-template>\\r\\n          2. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-basket-loaded\\\"></i> Shoping cart</ng-template>\\r\\n          3. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-pie-chart\\\"></i> Charts</ng-template>\\r\\n          4. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div><!--/.col-->\\r\\n    <div class=\\\"col-md-6 mb-4\\\">\\r\\n      <!-- Nav tabs -->\\r\\n      <tabset>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-list\\\"></i> Menu &nbsp;<span class=\\\"badge badge-success\\\">New</span></ng-template>\\r\\n          1. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-calculator\\\"></i> Calculator &nbsp;<span class=\\\"badge badge-pill badge-danger\\\">29</span></ng-template>\\r\\n          2. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n        <tab>\\r\\n          <ng-template tabHeading><i class=\\\"icon-pie-chart\\\"></i> Charts</ng-template>\\r\\n          4. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div><!--/.col-->\\r\\n  </div><!--/.row-->\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'tabs.component.html'\r\n})\r\nexport class TabsComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Bootstrap Tooltips\\r\\n      <div class=\\\"card-header-actions\\\">\\r\\n        <a href=\\\"https://valor-software.com/ngx-bootstrap/#/tooltip\\\" target=\\\"_blank\\\">\\r\\n          <small className=\\\"text-muted\\\">docs</small>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n              tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\">\\r\\n        Simple demo\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Tooltips <small>positioning</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              placement=\\\"top\\\">\\r\\n        Tooltip on top\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              placement=\\\"right\\\">\\r\\n        Tooltip on right\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              placement=\\\"auto\\\">\\r\\n        Tooltip auto\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              placement=\\\"left\\\">\\r\\n        Tooltip on left\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-secondary\\\"\\r\\n              tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              placement=\\\"bottom\\\">\\r\\n        Tooltip on bottom\\r\\n      </button>\\r\\n    </div>\\r\\n</div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Tooltips <small>dismissible</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n              tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n              triggers=\\\"focus\\\">\\r\\n        Dismissible tooltip\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Tooltips <small>dynamic content</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [tooltip]=\\\"content\\\">\\r\\n        Simple binding\\r\\n      </button>\\r\\n\\r\\n      <ng-template #tolTemplate>Just another: {{content}}</ng-template>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [tooltip]=\\\"tolTemplate\\\">\\r\\n        TemplateRef binding\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Tooltips <small>dynamic html</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <ng-template #popTemplate>Here we go: <div [innerHtml]=\\\"html\\\"></div></ng-template>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n              [tooltip]=\\\"popTemplate\\\">\\r\\n        Show me tooltip with html\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Tooltips <small>append to <code>body</code></small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\" style=\\\"position: relative; overflow: hidden; padding-top: 10px;\\\">\\r\\n        <div class=\\\"col-xs-12 col-12\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"\\r\\n                  tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\">\\r\\n            Default tooltip\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n                  tooltip=\\\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\\\"\\r\\n                  container=\\\"body\\\">\\r\\n            Tooltip appended to body\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Tooltips <small>custom triggers</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-6 col-6\\\">\\r\\n          <p>Desktop</p>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                  tooltip=\\\"I will hide on click\\\"\\r\\n                  triggers=\\\"mouseenter:click\\\">\\r\\n            Hover over me!\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xs-6 col-6\\\">\\r\\n          <p>Mobile</p>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                  tooltip=\\\"I will hide on click\\\"\\r\\n                  triggers=\\\"click\\\">\\r\\n            Click on me!\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Tooltips <small>manual triggers</small>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <p>\\r\\n  <span tooltip=\\\"Hello there! I was triggered manually\\\"\\r\\n        triggers=\\\"\\\" #pop=\\\"bs-tooltip\\\">\\r\\n  This text has attached tooltip\\r\\n  </span>\\r\\n      </p>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"pop.show()\\\">\\r\\n        Show\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"pop.hide()\\\">\\r\\n        Hide\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, SecurityContext} from '@angular/core';\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n  templateUrl: 'tooltips.component.html'\r\n})\r\nexport class TooltipsComponent {\r\n\r\n  constructor(sanitizer: DomSanitizer) {\r\n    this.html = sanitizer.sanitize(SecurityContext.HTML, this.html)\r\n  }\r\n\r\n  content: string = 'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.';\r\n  html: string = `<span class=\"btn btn-danger\">Never trust not sanitized HTML!!!</span>`;\r\n}\r\n"],"sourceRoot":""}